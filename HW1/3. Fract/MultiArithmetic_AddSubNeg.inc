macro Add.4 a,b,c {
     mov  rbx,[b+4*0]
     mov  rax,[b+4*2]
     add  rbx,[c+4*0]
     adc  rax,[c+4*2]
     mov  [a+4*0],rbx
     mov  [a+4*2],rax
}

macro Add.Sub.4 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r8,rax
     mov  r9,rbx
     add  rax,r12
     adc  rbx,r13
     sub  r8,r12
     sbb  r9,r13
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
}

macro Sub.4 a,b,c {
     mov  rbx,[b+4*0]
     mov  rax,[b+4*2]
     sub  rbx,[c+4*0]
     sbb  rax,[c+4*2]
     mov  [a+4*0],rbx
     mov  [a+4*2],rax
}

macro Neg.4 a,b {
     mov  rbx,[b+4*0]
     mov  rax,[b+4*2]
     not  rbx
     not  rax
     add  rbx,1
     adc  rax,0
     mov  [a+4*0],rbx
     mov  [a+4*2],rax
}

macro Add.SubAdd.4 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  r8,rax
     mov  r9,rbx
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     add  rax,r12
     adc  rbx,r13
     not  r12
     not  r13
     add  r8,r12
     adc  r9,r13
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
}

macro SubAdd.4 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     add  rax,1
     adc  rbx,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     not  r12
     not  r13
     add  rax,r12
     adc  rbx,r13
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
}

macro Add.6 a,b,c {
     mov  rcx,[b+4*0]
     mov  rbx,[b+4*2]
     mov  rax,[b+4*4]
     add  rcx,[c+4*0]
     adc  rbx,[c+4*2]
     adc  rax,[c+4*4]
     mov  [a+4*0],rcx
     mov  [a+4*2],rbx
     mov  [a+4*4],rax
}

macro Add.Sub.6 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
}

macro Sub.6 a,b,c {
     mov  rcx,[b+4*0]
     mov  rbx,[b+4*2]
     mov  rax,[b+4*4]
     sub  rcx,[c+4*0]
     sbb  rbx,[c+4*2]
     sbb  rax,[c+4*4]
     mov  [a+4*0],rcx
     mov  [a+4*2],rbx
     mov  [a+4*4],rax
}

macro Neg.6 a,b {
     mov  rcx,[b+4*0]
     mov  rbx,[b+4*2]
     mov  rax,[b+4*4]
     not  rcx
     not  rbx
     not  rax
     add  rcx,1
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rcx
     mov  [a+4*2],rbx
     mov  [a+4*4],rax
}

macro Add.SubAdd.6 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     not  r12
     not  r13
     not  r14
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
}

macro SubAdd.6 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     not  r12
     not  r13
     not  r14
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
}

macro Add.8 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
}

macro Add.Sub.8 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
}

macro Sub.8 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
}

macro Neg.8 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
}

macro Add.SubAdd.8 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
}

macro SubAdd.8 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
}

macro Add.12 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rbx,[b+4*8]
     mov  rax,[b+4*10]
     adc  rbx,[c+4*8]
     adc  rax,[c+4*10]
     mov  [a+4*8],rbx
     mov  [a+4*10],rax
}

macro Add.Sub.12 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r8,rax
     mov  r9,rbx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
}

macro Sub.12 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rbx,[b+4*8]
     mov  rax,[b+4*10]
     sbb  rbx,[c+4*8]
     sbb  rax,[c+4*10]
     mov  [a+4*8],rbx
     mov  [a+4*10],rax
}

macro Neg.12 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rbx,[b+4*8]
     mov  rax,[b+4*10]
     not  rbx
     not  rax
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rbx
     mov  [a+4*10],rax
}

macro Add.SubAdd.12 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  r8,rax
     mov  r9,rbx
     add  rax,rsi
     adc  rbx,0
     add  r8,rdi
     adc  r9,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     add  rax,r12
     adc  rbx,r13
     not  r12
     not  r13
     add  r8,r12
     adc  r9,r13
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
}

macro SubAdd.12 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     add  rax,rdi
     adc  rbx,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     not  r12
     not  r13
     add  rax,r12
     adc  rbx,r13
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
}

macro Add.16 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
}

macro Add.Sub.16 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
}

macro Sub.16 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
}

macro Neg.16 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
}

macro Add.SubAdd.16 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
}

macro SubAdd.16 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
}

macro Add.20 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rbx,[b+4*16]
     mov  rax,[b+4*18]
     adc  rbx,[c+4*16]
     adc  rax,[c+4*18]
     mov  [a+4*16],rbx
     mov  [a+4*18],rax
}

macro Add.Sub.20 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r8,rax
     mov  r9,rbx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
}

macro Sub.20 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rbx,[b+4*16]
     mov  rax,[b+4*18]
     sbb  rbx,[c+4*16]
     sbb  rax,[c+4*18]
     mov  [a+4*16],rbx
     mov  [a+4*18],rax
}

macro Neg.20 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rbx,[b+4*16]
     mov  rax,[b+4*18]
     not  rbx
     not  rax
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rbx
     mov  [a+4*18],rax
}

macro Add.SubAdd.20 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  r8,rax
     mov  r9,rbx
     add  rax,rsi
     adc  rbx,0
     add  r8,rdi
     adc  r9,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     add  rax,r12
     adc  rbx,r13
     not  r12
     not  r13
     add  r8,r12
     adc  r9,r13
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
}

macro SubAdd.20 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     add  rax,rdi
     adc  rbx,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     not  r12
     not  r13
     add  rax,r12
     adc  rbx,r13
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
}

macro Add.24 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
}

macro Add.Sub.24 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
}

macro Sub.24 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
}

macro Neg.24 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
}

macro Add.SubAdd.24 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
}

macro SubAdd.24 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
}

macro Add.28 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rbx,[b+4*24]
     mov  rax,[b+4*26]
     adc  rbx,[c+4*24]
     adc  rax,[c+4*26]
     mov  [a+4*24],rbx
     mov  [a+4*26],rax
}

macro Add.Sub.28 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r8,rax
     mov  r9,rbx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
}

macro Sub.28 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rbx,[b+4*24]
     mov  rax,[b+4*26]
     sbb  rbx,[c+4*24]
     sbb  rax,[c+4*26]
     mov  [a+4*24],rbx
     mov  [a+4*26],rax
}

macro Neg.28 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rbx,[b+4*24]
     mov  rax,[b+4*26]
     not  rbx
     not  rax
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rbx
     mov  [a+4*26],rax
}

macro Add.SubAdd.28 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  r8,rax
     mov  r9,rbx
     add  rax,rsi
     adc  rbx,0
     add  r8,rdi
     adc  r9,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     add  rax,r12
     adc  rbx,r13
     not  r12
     not  r13
     add  r8,r12
     adc  r9,r13
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
}

macro SubAdd.28 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     add  rax,rdi
     adc  rbx,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     not  r12
     not  r13
     add  rax,r12
     adc  rbx,r13
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
}

macro Add.32 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
}

macro Add.Sub.32 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
}

macro Sub.32 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
}

macro Neg.32 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
}

macro Add.SubAdd.32 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
}

macro SubAdd.32 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
}

macro Add.36 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rbx,[b+4*32]
     mov  rax,[b+4*34]
     adc  rbx,[c+4*32]
     adc  rax,[c+4*34]
     mov  [a+4*32],rbx
     mov  [a+4*34],rax
}

macro Add.Sub.36 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r8,rax
     mov  r9,rbx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
}

macro Sub.36 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rbx,[b+4*32]
     mov  rax,[b+4*34]
     sbb  rbx,[c+4*32]
     sbb  rax,[c+4*34]
     mov  [a+4*32],rbx
     mov  [a+4*34],rax
}

macro Neg.36 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rbx,[b+4*32]
     mov  rax,[b+4*34]
     not  rbx
     not  rax
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rbx
     mov  [a+4*34],rax
}

macro Add.SubAdd.36 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  r8,rax
     mov  r9,rbx
     add  rax,rsi
     adc  rbx,0
     add  r8,rdi
     adc  r9,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     add  rax,r12
     adc  rbx,r13
     not  r12
     not  r13
     add  r8,r12
     adc  r9,r13
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
}

macro SubAdd.36 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     add  rax,rdi
     adc  rbx,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     not  r12
     not  r13
     add  rax,r12
     adc  rbx,r13
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
}

macro Add.40 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
}

macro Add.Sub.40 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
}

macro Sub.40 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
}

macro Neg.40 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
}

macro Add.SubAdd.40 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
}

macro SubAdd.40 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
}

macro Add.48 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
}

macro Add.Sub.48 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
}

macro Sub.48 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
}

macro Neg.48 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
}

macro Add.SubAdd.48 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
}

macro SubAdd.48 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
}

macro Add.56 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     adc  rdx,[c+4*48]
     adc  rcx,[c+4*50]
     adc  rbx,[c+4*52]
     adc  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
}

macro Add.Sub.56 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
}

macro Sub.56 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     sbb  rdx,[c+4*48]
     sbb  rcx,[c+4*50]
     sbb  rbx,[c+4*52]
     sbb  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
}

macro Neg.56 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
}

macro Add.SubAdd.56 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*48]
     adc  r9,[e+4*50]
     adc  r10,[e+4*52]
     adc  r11,[e+4*54]
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
}

macro SubAdd.56 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*48]
     adc  rbx,[e+4*50]
     adc  rcx,[e+4*52]
     adc  rdx,[e+4*54]
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
}

macro Add.64 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     adc  rdx,[c+4*48]
     adc  rcx,[c+4*50]
     adc  rbx,[c+4*52]
     adc  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     adc  rdx,[c+4*56]
     adc  rcx,[c+4*58]
     adc  rbx,[c+4*60]
     adc  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
}

macro Add.Sub.64 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
}

macro Sub.64 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     sbb  rdx,[c+4*48]
     sbb  rcx,[c+4*50]
     sbb  rbx,[c+4*52]
     sbb  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     sbb  rdx,[c+4*56]
     sbb  rcx,[c+4*58]
     sbb  rbx,[c+4*60]
     sbb  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
}

macro Neg.64 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
}

macro Add.SubAdd.64 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*48]
     adc  r9,[e+4*50]
     adc  r10,[e+4*52]
     adc  r11,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*56]
     adc  r9,[e+4*58]
     adc  r10,[e+4*60]
     adc  r11,[e+4*62]
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
}

macro SubAdd.64 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*48]
     adc  rbx,[e+4*50]
     adc  rcx,[e+4*52]
     adc  rdx,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*56]
     adc  rbx,[e+4*58]
     adc  rcx,[e+4*60]
     adc  rdx,[e+4*62]
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
}

macro Add.72 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     adc  rdx,[c+4*48]
     adc  rcx,[c+4*50]
     adc  rbx,[c+4*52]
     adc  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     adc  rdx,[c+4*56]
     adc  rcx,[c+4*58]
     adc  rbx,[c+4*60]
     adc  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     adc  rdx,[c+4*64]
     adc  rcx,[c+4*66]
     adc  rbx,[c+4*68]
     adc  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
}

macro Add.Sub.72 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
}

macro Sub.72 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     sbb  rdx,[c+4*48]
     sbb  rcx,[c+4*50]
     sbb  rbx,[c+4*52]
     sbb  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     sbb  rdx,[c+4*56]
     sbb  rcx,[c+4*58]
     sbb  rbx,[c+4*60]
     sbb  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     sbb  rdx,[c+4*64]
     sbb  rcx,[c+4*66]
     sbb  rbx,[c+4*68]
     sbb  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
}

macro Neg.72 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
}

macro Add.SubAdd.72 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*48]
     adc  r9,[e+4*50]
     adc  r10,[e+4*52]
     adc  r11,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*56]
     adc  r9,[e+4*58]
     adc  r10,[e+4*60]
     adc  r11,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*64]
     adc  r9,[e+4*66]
     adc  r10,[e+4*68]
     adc  r11,[e+4*70]
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
}

macro SubAdd.72 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*48]
     adc  rbx,[e+4*50]
     adc  rcx,[e+4*52]
     adc  rdx,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*56]
     adc  rbx,[e+4*58]
     adc  rcx,[e+4*60]
     adc  rdx,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*64]
     adc  rbx,[e+4*66]
     adc  rcx,[e+4*68]
     adc  rdx,[e+4*70]
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
}

macro Add.84 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     adc  rdx,[c+4*48]
     adc  rcx,[c+4*50]
     adc  rbx,[c+4*52]
     adc  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     adc  rdx,[c+4*56]
     adc  rcx,[c+4*58]
     adc  rbx,[c+4*60]
     adc  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     adc  rdx,[c+4*64]
     adc  rcx,[c+4*66]
     adc  rbx,[c+4*68]
     adc  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     adc  rdx,[c+4*72]
     adc  rcx,[c+4*74]
     adc  rbx,[c+4*76]
     adc  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rbx,[b+4*80]
     mov  rax,[b+4*82]
     adc  rbx,[c+4*80]
     adc  rax,[c+4*82]
     mov  [a+4*80],rbx
     mov  [a+4*82],rax
}

macro Add.Sub.84 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r8,rax
     mov  r9,rbx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
}

macro Sub.84 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     sbb  rdx,[c+4*48]
     sbb  rcx,[c+4*50]
     sbb  rbx,[c+4*52]
     sbb  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     sbb  rdx,[c+4*56]
     sbb  rcx,[c+4*58]
     sbb  rbx,[c+4*60]
     sbb  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     sbb  rdx,[c+4*64]
     sbb  rcx,[c+4*66]
     sbb  rbx,[c+4*68]
     sbb  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     sbb  rdx,[c+4*72]
     sbb  rcx,[c+4*74]
     sbb  rbx,[c+4*76]
     sbb  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rbx,[b+4*80]
     mov  rax,[b+4*82]
     sbb  rbx,[c+4*80]
     sbb  rax,[c+4*82]
     mov  [a+4*80],rbx
     mov  [a+4*82],rax
}

macro Neg.84 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rbx,[b+4*80]
     mov  rax,[b+4*82]
     not  rbx
     not  rax
     adc  rbx,0
     adc  rax,0
     mov  [a+4*80],rbx
     mov  [a+4*82],rax
}

macro Add.SubAdd.84 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*48]
     adc  r9,[e+4*50]
     adc  r10,[e+4*52]
     adc  r11,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*56]
     adc  r9,[e+4*58]
     adc  r10,[e+4*60]
     adc  r11,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*64]
     adc  r9,[e+4*66]
     adc  r10,[e+4*68]
     adc  r11,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*72]
     adc  r9,[e+4*74]
     adc  r10,[e+4*76]
     adc  r11,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  r8,rax
     mov  r9,rbx
     add  rax,rsi
     adc  rbx,0
     add  r8,rdi
     adc  r9,0
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     add  rax,r12
     adc  rbx,r13
     not  r12
     not  r13
     add  r8,r12
     adc  r9,r13
     add  r8,[e+4*80]
     adc  r9,[e+4*82]
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
}

macro SubAdd.84 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*48]
     adc  rbx,[e+4*50]
     adc  rcx,[e+4*52]
     adc  rdx,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*56]
     adc  rbx,[e+4*58]
     adc  rcx,[e+4*60]
     adc  rdx,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*64]
     adc  rbx,[e+4*66]
     adc  rcx,[e+4*68]
     adc  rdx,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*72]
     adc  rbx,[e+4*74]
     adc  rcx,[e+4*76]
     adc  rdx,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     add  rax,rdi
     adc  rbx,0
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     not  r12
     not  r13
     add  rax,r12
     adc  rbx,r13
     add  rax,[e+4*80]
     adc  rbx,[e+4*82]
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
}

macro Add.96 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     adc  rdx,[c+4*48]
     adc  rcx,[c+4*50]
     adc  rbx,[c+4*52]
     adc  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     adc  rdx,[c+4*56]
     adc  rcx,[c+4*58]
     adc  rbx,[c+4*60]
     adc  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     adc  rdx,[c+4*64]
     adc  rcx,[c+4*66]
     adc  rbx,[c+4*68]
     adc  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     adc  rdx,[c+4*72]
     adc  rcx,[c+4*74]
     adc  rbx,[c+4*76]
     adc  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     adc  rdx,[c+4*80]
     adc  rcx,[c+4*82]
     adc  rbx,[c+4*84]
     adc  rax,[c+4*86]
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     adc  rdx,[c+4*88]
     adc  rcx,[c+4*90]
     adc  rbx,[c+4*92]
     adc  rax,[c+4*94]
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
}

macro Add.Sub.96 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
     mov  [b+4*84],r10
     mov  [b+4*86],r11
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  [b+4*88],r8
     mov  [b+4*90],r9
     mov  [b+4*92],r10
     mov  [b+4*94],r11
}

macro Sub.96 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     sbb  rdx,[c+4*48]
     sbb  rcx,[c+4*50]
     sbb  rbx,[c+4*52]
     sbb  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     sbb  rdx,[c+4*56]
     sbb  rcx,[c+4*58]
     sbb  rbx,[c+4*60]
     sbb  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     sbb  rdx,[c+4*64]
     sbb  rcx,[c+4*66]
     sbb  rbx,[c+4*68]
     sbb  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     sbb  rdx,[c+4*72]
     sbb  rcx,[c+4*74]
     sbb  rbx,[c+4*76]
     sbb  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     sbb  rdx,[c+4*80]
     sbb  rcx,[c+4*82]
     sbb  rbx,[c+4*84]
     sbb  rax,[c+4*86]
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     sbb  rdx,[c+4*88]
     sbb  rcx,[c+4*90]
     sbb  rbx,[c+4*92]
     sbb  rax,[c+4*94]
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
}

macro Neg.96 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
}

macro Add.SubAdd.96 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*48]
     adc  r9,[e+4*50]
     adc  r10,[e+4*52]
     adc  r11,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*56]
     adc  r9,[e+4*58]
     adc  r10,[e+4*60]
     adc  r11,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*64]
     adc  r9,[e+4*66]
     adc  r10,[e+4*68]
     adc  r11,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*72]
     adc  r9,[e+4*74]
     adc  r10,[e+4*76]
     adc  r11,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*80]
     adc  r9,[e+4*82]
     adc  r10,[e+4*84]
     adc  r11,[e+4*86]
     adc  rdi,0
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
     mov  [b+4*84],r10
     mov  [b+4*86],r11
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*88]
     adc  r9,[e+4*90]
     adc  r10,[e+4*92]
     adc  r11,[e+4*94]
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  [b+4*88],r8
     mov  [b+4*90],r9
     mov  [b+4*92],r10
     mov  [b+4*94],r11
}

macro SubAdd.96 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*48]
     adc  rbx,[e+4*50]
     adc  rcx,[e+4*52]
     adc  rdx,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*56]
     adc  rbx,[e+4*58]
     adc  rcx,[e+4*60]
     adc  rdx,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*64]
     adc  rbx,[e+4*66]
     adc  rcx,[e+4*68]
     adc  rdx,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*72]
     adc  rbx,[e+4*74]
     adc  rcx,[e+4*76]
     adc  rdx,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*80]
     adc  rbx,[e+4*82]
     adc  rcx,[e+4*84]
     adc  rdx,[e+4*86]
     adc  rdi,0
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*88]
     adc  rbx,[e+4*90]
     adc  rcx,[e+4*92]
     adc  rdx,[e+4*94]
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
}

macro Add.112 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     adc  rdx,[c+4*48]
     adc  rcx,[c+4*50]
     adc  rbx,[c+4*52]
     adc  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     adc  rdx,[c+4*56]
     adc  rcx,[c+4*58]
     adc  rbx,[c+4*60]
     adc  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     adc  rdx,[c+4*64]
     adc  rcx,[c+4*66]
     adc  rbx,[c+4*68]
     adc  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     adc  rdx,[c+4*72]
     adc  rcx,[c+4*74]
     adc  rbx,[c+4*76]
     adc  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     adc  rdx,[c+4*80]
     adc  rcx,[c+4*82]
     adc  rbx,[c+4*84]
     adc  rax,[c+4*86]
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     adc  rdx,[c+4*88]
     adc  rcx,[c+4*90]
     adc  rbx,[c+4*92]
     adc  rax,[c+4*94]
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
     mov  rdx,[b+4*96]
     mov  rcx,[b+4*98]
     mov  rbx,[b+4*100]
     mov  rax,[b+4*102]
     adc  rdx,[c+4*96]
     adc  rcx,[c+4*98]
     adc  rbx,[c+4*100]
     adc  rax,[c+4*102]
     mov  [a+4*96],rdx
     mov  [a+4*98],rcx
     mov  [a+4*100],rbx
     mov  [a+4*102],rax
     mov  rdx,[b+4*104]
     mov  rcx,[b+4*106]
     mov  rbx,[b+4*108]
     mov  rax,[b+4*110]
     adc  rdx,[c+4*104]
     adc  rcx,[c+4*106]
     adc  rbx,[c+4*108]
     adc  rax,[c+4*110]
     mov  [a+4*104],rdx
     mov  [a+4*106],rcx
     mov  [a+4*108],rbx
     mov  [a+4*110],rax
}

macro Add.Sub.112 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
     mov  [b+4*84],r10
     mov  [b+4*86],r11
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  [b+4*88],r8
     mov  [b+4*90],r9
     mov  [b+4*92],r10
     mov  [b+4*94],r11
     mov  rax,[c+4*96]
     mov  rbx,[c+4*98]
     mov  rcx,[c+4*100]
     mov  rdx,[c+4*102]
     mov  r12,[d+4*96]
     mov  r13,[d+4*98]
     mov  r14,[d+4*100]
     mov  r15,[d+4*102]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*96],rax
     mov  [a+4*98],rbx
     mov  [a+4*100],rcx
     mov  [a+4*102],rdx
     mov  [b+4*96],r8
     mov  [b+4*98],r9
     mov  [b+4*100],r10
     mov  [b+4*102],r11
     mov  rax,[c+4*104]
     mov  rbx,[c+4*106]
     mov  rcx,[c+4*108]
     mov  rdx,[c+4*110]
     mov  r12,[d+4*104]
     mov  r13,[d+4*106]
     mov  r14,[d+4*108]
     mov  r15,[d+4*110]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*104],rax
     mov  [a+4*106],rbx
     mov  [a+4*108],rcx
     mov  [a+4*110],rdx
     mov  [b+4*104],r8
     mov  [b+4*106],r9
     mov  [b+4*108],r10
     mov  [b+4*110],r11
}

macro Sub.112 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     sbb  rdx,[c+4*48]
     sbb  rcx,[c+4*50]
     sbb  rbx,[c+4*52]
     sbb  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     sbb  rdx,[c+4*56]
     sbb  rcx,[c+4*58]
     sbb  rbx,[c+4*60]
     sbb  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     sbb  rdx,[c+4*64]
     sbb  rcx,[c+4*66]
     sbb  rbx,[c+4*68]
     sbb  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     sbb  rdx,[c+4*72]
     sbb  rcx,[c+4*74]
     sbb  rbx,[c+4*76]
     sbb  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     sbb  rdx,[c+4*80]
     sbb  rcx,[c+4*82]
     sbb  rbx,[c+4*84]
     sbb  rax,[c+4*86]
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     sbb  rdx,[c+4*88]
     sbb  rcx,[c+4*90]
     sbb  rbx,[c+4*92]
     sbb  rax,[c+4*94]
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
     mov  rdx,[b+4*96]
     mov  rcx,[b+4*98]
     mov  rbx,[b+4*100]
     mov  rax,[b+4*102]
     sbb  rdx,[c+4*96]
     sbb  rcx,[c+4*98]
     sbb  rbx,[c+4*100]
     sbb  rax,[c+4*102]
     mov  [a+4*96],rdx
     mov  [a+4*98],rcx
     mov  [a+4*100],rbx
     mov  [a+4*102],rax
     mov  rdx,[b+4*104]
     mov  rcx,[b+4*106]
     mov  rbx,[b+4*108]
     mov  rax,[b+4*110]
     sbb  rdx,[c+4*104]
     sbb  rcx,[c+4*106]
     sbb  rbx,[c+4*108]
     sbb  rax,[c+4*110]
     mov  [a+4*104],rdx
     mov  [a+4*106],rcx
     mov  [a+4*108],rbx
     mov  [a+4*110],rax
}

macro Neg.112 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
     mov  rdx,[b+4*96]
     mov  rcx,[b+4*98]
     mov  rbx,[b+4*100]
     mov  rax,[b+4*102]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*96],rdx
     mov  [a+4*98],rcx
     mov  [a+4*100],rbx
     mov  [a+4*102],rax
     mov  rdx,[b+4*104]
     mov  rcx,[b+4*106]
     mov  rbx,[b+4*108]
     mov  rax,[b+4*110]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*104],rdx
     mov  [a+4*106],rcx
     mov  [a+4*108],rbx
     mov  [a+4*110],rax
}

macro Add.SubAdd.112 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*48]
     adc  r9,[e+4*50]
     adc  r10,[e+4*52]
     adc  r11,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*56]
     adc  r9,[e+4*58]
     adc  r10,[e+4*60]
     adc  r11,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*64]
     adc  r9,[e+4*66]
     adc  r10,[e+4*68]
     adc  r11,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*72]
     adc  r9,[e+4*74]
     adc  r10,[e+4*76]
     adc  r11,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*80]
     adc  r9,[e+4*82]
     adc  r10,[e+4*84]
     adc  r11,[e+4*86]
     adc  rdi,0
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
     mov  [b+4*84],r10
     mov  [b+4*86],r11
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*88]
     adc  r9,[e+4*90]
     adc  r10,[e+4*92]
     adc  r11,[e+4*94]
     adc  rdi,0
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  [b+4*88],r8
     mov  [b+4*90],r9
     mov  [b+4*92],r10
     mov  [b+4*94],r11
     mov  rax,[c+4*96]
     mov  rbx,[c+4*98]
     mov  rcx,[c+4*100]
     mov  rdx,[c+4*102]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*96]
     mov  r13,[d+4*98]
     mov  r14,[d+4*100]
     mov  r15,[d+4*102]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*96]
     adc  r9,[e+4*98]
     adc  r10,[e+4*100]
     adc  r11,[e+4*102]
     adc  rdi,0
     mov  [a+4*96],rax
     mov  [a+4*98],rbx
     mov  [a+4*100],rcx
     mov  [a+4*102],rdx
     mov  [b+4*96],r8
     mov  [b+4*98],r9
     mov  [b+4*100],r10
     mov  [b+4*102],r11
     mov  rax,[c+4*104]
     mov  rbx,[c+4*106]
     mov  rcx,[c+4*108]
     mov  rdx,[c+4*110]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*104]
     mov  r13,[d+4*106]
     mov  r14,[d+4*108]
     mov  r15,[d+4*110]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*104]
     adc  r9,[e+4*106]
     adc  r10,[e+4*108]
     adc  r11,[e+4*110]
     mov  [a+4*104],rax
     mov  [a+4*106],rbx
     mov  [a+4*108],rcx
     mov  [a+4*110],rdx
     mov  [b+4*104],r8
     mov  [b+4*106],r9
     mov  [b+4*108],r10
     mov  [b+4*110],r11
}

macro SubAdd.112 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*48]
     adc  rbx,[e+4*50]
     adc  rcx,[e+4*52]
     adc  rdx,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*56]
     adc  rbx,[e+4*58]
     adc  rcx,[e+4*60]
     adc  rdx,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*64]
     adc  rbx,[e+4*66]
     adc  rcx,[e+4*68]
     adc  rdx,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*72]
     adc  rbx,[e+4*74]
     adc  rcx,[e+4*76]
     adc  rdx,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*80]
     adc  rbx,[e+4*82]
     adc  rcx,[e+4*84]
     adc  rdx,[e+4*86]
     adc  rdi,0
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*88]
     adc  rbx,[e+4*90]
     adc  rcx,[e+4*92]
     adc  rdx,[e+4*94]
     adc  rdi,0
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  rax,[c+4*96]
     mov  rbx,[c+4*98]
     mov  rcx,[c+4*100]
     mov  rdx,[c+4*102]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*96]
     mov  r13,[d+4*98]
     mov  r14,[d+4*100]
     mov  r15,[d+4*102]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*96]
     adc  rbx,[e+4*98]
     adc  rcx,[e+4*100]
     adc  rdx,[e+4*102]
     adc  rdi,0
     mov  [a+4*96],rax
     mov  [a+4*98],rbx
     mov  [a+4*100],rcx
     mov  [a+4*102],rdx
     mov  rax,[c+4*104]
     mov  rbx,[c+4*106]
     mov  rcx,[c+4*108]
     mov  rdx,[c+4*110]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*104]
     mov  r13,[d+4*106]
     mov  r14,[d+4*108]
     mov  r15,[d+4*110]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*104]
     adc  rbx,[e+4*106]
     adc  rcx,[e+4*108]
     adc  rdx,[e+4*110]
     mov  [a+4*104],rax
     mov  [a+4*106],rbx
     mov  [a+4*108],rcx
     mov  [a+4*110],rdx
}

macro Add.128 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     add  rdx,[c+4*0]
     adc  rcx,[c+4*2]
     adc  rbx,[c+4*4]
     adc  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     adc  rdx,[c+4*8]
     adc  rcx,[c+4*10]
     adc  rbx,[c+4*12]
     adc  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     adc  rdx,[c+4*16]
     adc  rcx,[c+4*18]
     adc  rbx,[c+4*20]
     adc  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     adc  rdx,[c+4*24]
     adc  rcx,[c+4*26]
     adc  rbx,[c+4*28]
     adc  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     adc  rdx,[c+4*32]
     adc  rcx,[c+4*34]
     adc  rbx,[c+4*36]
     adc  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     adc  rdx,[c+4*40]
     adc  rcx,[c+4*42]
     adc  rbx,[c+4*44]
     adc  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     adc  rdx,[c+4*48]
     adc  rcx,[c+4*50]
     adc  rbx,[c+4*52]
     adc  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     adc  rdx,[c+4*56]
     adc  rcx,[c+4*58]
     adc  rbx,[c+4*60]
     adc  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     adc  rdx,[c+4*64]
     adc  rcx,[c+4*66]
     adc  rbx,[c+4*68]
     adc  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     adc  rdx,[c+4*72]
     adc  rcx,[c+4*74]
     adc  rbx,[c+4*76]
     adc  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     adc  rdx,[c+4*80]
     adc  rcx,[c+4*82]
     adc  rbx,[c+4*84]
     adc  rax,[c+4*86]
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     adc  rdx,[c+4*88]
     adc  rcx,[c+4*90]
     adc  rbx,[c+4*92]
     adc  rax,[c+4*94]
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
     mov  rdx,[b+4*96]
     mov  rcx,[b+4*98]
     mov  rbx,[b+4*100]
     mov  rax,[b+4*102]
     adc  rdx,[c+4*96]
     adc  rcx,[c+4*98]
     adc  rbx,[c+4*100]
     adc  rax,[c+4*102]
     mov  [a+4*96],rdx
     mov  [a+4*98],rcx
     mov  [a+4*100],rbx
     mov  [a+4*102],rax
     mov  rdx,[b+4*104]
     mov  rcx,[b+4*106]
     mov  rbx,[b+4*108]
     mov  rax,[b+4*110]
     adc  rdx,[c+4*104]
     adc  rcx,[c+4*106]
     adc  rbx,[c+4*108]
     adc  rax,[c+4*110]
     mov  [a+4*104],rdx
     mov  [a+4*106],rcx
     mov  [a+4*108],rbx
     mov  [a+4*110],rax
     mov  rdx,[b+4*112]
     mov  rcx,[b+4*114]
     mov  rbx,[b+4*116]
     mov  rax,[b+4*118]
     adc  rdx,[c+4*112]
     adc  rcx,[c+4*114]
     adc  rbx,[c+4*116]
     adc  rax,[c+4*118]
     mov  [a+4*112],rdx
     mov  [a+4*114],rcx
     mov  [a+4*116],rbx
     mov  [a+4*118],rax
     mov  rdx,[b+4*120]
     mov  rcx,[b+4*122]
     mov  rbx,[b+4*124]
     mov  rax,[b+4*126]
     adc  rdx,[c+4*120]
     adc  rcx,[c+4*122]
     adc  rbx,[c+4*124]
     adc  rax,[c+4*126]
     mov  [a+4*120],rdx
     mov  [a+4*122],rcx
     mov  [a+4*124],rbx
     mov  [a+4*126],rax
}

macro Add.Sub.128 a,b,c,d {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     sub  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
     mov  [b+4*84],r10
     mov  [b+4*86],r11
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  [b+4*88],r8
     mov  [b+4*90],r9
     mov  [b+4*92],r10
     mov  [b+4*94],r11
     mov  rax,[c+4*96]
     mov  rbx,[c+4*98]
     mov  rcx,[c+4*100]
     mov  rdx,[c+4*102]
     mov  r12,[d+4*96]
     mov  r13,[d+4*98]
     mov  r14,[d+4*100]
     mov  r15,[d+4*102]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*96],rax
     mov  [a+4*98],rbx
     mov  [a+4*100],rcx
     mov  [a+4*102],rdx
     mov  [b+4*96],r8
     mov  [b+4*98],r9
     mov  [b+4*100],r10
     mov  [b+4*102],r11
     mov  rax,[c+4*104]
     mov  rbx,[c+4*106]
     mov  rcx,[c+4*108]
     mov  rdx,[c+4*110]
     mov  r12,[d+4*104]
     mov  r13,[d+4*106]
     mov  r14,[d+4*108]
     mov  r15,[d+4*110]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*104],rax
     mov  [a+4*106],rbx
     mov  [a+4*108],rcx
     mov  [a+4*110],rdx
     mov  [b+4*104],r8
     mov  [b+4*106],r9
     mov  [b+4*108],r10
     mov  [b+4*110],r11
     mov  rax,[c+4*112]
     mov  rbx,[c+4*114]
     mov  rcx,[c+4*116]
     mov  rdx,[c+4*118]
     mov  r12,[d+4*112]
     mov  r13,[d+4*114]
     mov  r14,[d+4*116]
     mov  r15,[d+4*118]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     sbb  rdi,rdi
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     sbb  rsi,rsi
     mov  [a+4*112],rax
     mov  [a+4*114],rbx
     mov  [a+4*116],rcx
     mov  [a+4*118],rdx
     mov  [b+4*112],r8
     mov  [b+4*114],r9
     mov  [b+4*116],r10
     mov  [b+4*118],r11
     mov  rax,[c+4*120]
     mov  rbx,[c+4*122]
     mov  rcx,[c+4*124]
     mov  rdx,[c+4*126]
     mov  r12,[d+4*120]
     mov  r13,[d+4*122]
     mov  r14,[d+4*124]
     mov  r15,[d+4*126]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rdi,rdi
     adc  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rsi,rsi
     sbb  r8,r12
     sbb  r9,r13
     sbb  r10,r14
     sbb  r11,r15
     mov  [a+4*120],rax
     mov  [a+4*122],rbx
     mov  [a+4*124],rcx
     mov  [a+4*126],rdx
     mov  [b+4*120],r8
     mov  [b+4*122],r9
     mov  [b+4*124],r10
     mov  [b+4*126],r11
}

macro Sub.128 a,b,c {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     sub  rdx,[c+4*0]
     sbb  rcx,[c+4*2]
     sbb  rbx,[c+4*4]
     sbb  rax,[c+4*6]
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     sbb  rdx,[c+4*8]
     sbb  rcx,[c+4*10]
     sbb  rbx,[c+4*12]
     sbb  rax,[c+4*14]
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     sbb  rdx,[c+4*16]
     sbb  rcx,[c+4*18]
     sbb  rbx,[c+4*20]
     sbb  rax,[c+4*22]
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     sbb  rdx,[c+4*24]
     sbb  rcx,[c+4*26]
     sbb  rbx,[c+4*28]
     sbb  rax,[c+4*30]
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     sbb  rdx,[c+4*32]
     sbb  rcx,[c+4*34]
     sbb  rbx,[c+4*36]
     sbb  rax,[c+4*38]
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     sbb  rdx,[c+4*40]
     sbb  rcx,[c+4*42]
     sbb  rbx,[c+4*44]
     sbb  rax,[c+4*46]
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     sbb  rdx,[c+4*48]
     sbb  rcx,[c+4*50]
     sbb  rbx,[c+4*52]
     sbb  rax,[c+4*54]
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     sbb  rdx,[c+4*56]
     sbb  rcx,[c+4*58]
     sbb  rbx,[c+4*60]
     sbb  rax,[c+4*62]
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     sbb  rdx,[c+4*64]
     sbb  rcx,[c+4*66]
     sbb  rbx,[c+4*68]
     sbb  rax,[c+4*70]
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     sbb  rdx,[c+4*72]
     sbb  rcx,[c+4*74]
     sbb  rbx,[c+4*76]
     sbb  rax,[c+4*78]
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     sbb  rdx,[c+4*80]
     sbb  rcx,[c+4*82]
     sbb  rbx,[c+4*84]
     sbb  rax,[c+4*86]
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     sbb  rdx,[c+4*88]
     sbb  rcx,[c+4*90]
     sbb  rbx,[c+4*92]
     sbb  rax,[c+4*94]
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
     mov  rdx,[b+4*96]
     mov  rcx,[b+4*98]
     mov  rbx,[b+4*100]
     mov  rax,[b+4*102]
     sbb  rdx,[c+4*96]
     sbb  rcx,[c+4*98]
     sbb  rbx,[c+4*100]
     sbb  rax,[c+4*102]
     mov  [a+4*96],rdx
     mov  [a+4*98],rcx
     mov  [a+4*100],rbx
     mov  [a+4*102],rax
     mov  rdx,[b+4*104]
     mov  rcx,[b+4*106]
     mov  rbx,[b+4*108]
     mov  rax,[b+4*110]
     sbb  rdx,[c+4*104]
     sbb  rcx,[c+4*106]
     sbb  rbx,[c+4*108]
     sbb  rax,[c+4*110]
     mov  [a+4*104],rdx
     mov  [a+4*106],rcx
     mov  [a+4*108],rbx
     mov  [a+4*110],rax
     mov  rdx,[b+4*112]
     mov  rcx,[b+4*114]
     mov  rbx,[b+4*116]
     mov  rax,[b+4*118]
     sbb  rdx,[c+4*112]
     sbb  rcx,[c+4*114]
     sbb  rbx,[c+4*116]
     sbb  rax,[c+4*118]
     mov  [a+4*112],rdx
     mov  [a+4*114],rcx
     mov  [a+4*116],rbx
     mov  [a+4*118],rax
     mov  rdx,[b+4*120]
     mov  rcx,[b+4*122]
     mov  rbx,[b+4*124]
     mov  rax,[b+4*126]
     sbb  rdx,[c+4*120]
     sbb  rcx,[c+4*122]
     sbb  rbx,[c+4*124]
     sbb  rax,[c+4*126]
     mov  [a+4*120],rdx
     mov  [a+4*122],rcx
     mov  [a+4*124],rbx
     mov  [a+4*126],rax
}

macro Neg.128 a,b {
     mov  rdx,[b+4*0]
     mov  rcx,[b+4*2]
     mov  rbx,[b+4*4]
     mov  rax,[b+4*6]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     add  rdx,1
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*0],rdx
     mov  [a+4*2],rcx
     mov  [a+4*4],rbx
     mov  [a+4*6],rax
     mov  rdx,[b+4*8]
     mov  rcx,[b+4*10]
     mov  rbx,[b+4*12]
     mov  rax,[b+4*14]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*8],rdx
     mov  [a+4*10],rcx
     mov  [a+4*12],rbx
     mov  [a+4*14],rax
     mov  rdx,[b+4*16]
     mov  rcx,[b+4*18]
     mov  rbx,[b+4*20]
     mov  rax,[b+4*22]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*16],rdx
     mov  [a+4*18],rcx
     mov  [a+4*20],rbx
     mov  [a+4*22],rax
     mov  rdx,[b+4*24]
     mov  rcx,[b+4*26]
     mov  rbx,[b+4*28]
     mov  rax,[b+4*30]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*24],rdx
     mov  [a+4*26],rcx
     mov  [a+4*28],rbx
     mov  [a+4*30],rax
     mov  rdx,[b+4*32]
     mov  rcx,[b+4*34]
     mov  rbx,[b+4*36]
     mov  rax,[b+4*38]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*32],rdx
     mov  [a+4*34],rcx
     mov  [a+4*36],rbx
     mov  [a+4*38],rax
     mov  rdx,[b+4*40]
     mov  rcx,[b+4*42]
     mov  rbx,[b+4*44]
     mov  rax,[b+4*46]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*40],rdx
     mov  [a+4*42],rcx
     mov  [a+4*44],rbx
     mov  [a+4*46],rax
     mov  rdx,[b+4*48]
     mov  rcx,[b+4*50]
     mov  rbx,[b+4*52]
     mov  rax,[b+4*54]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*48],rdx
     mov  [a+4*50],rcx
     mov  [a+4*52],rbx
     mov  [a+4*54],rax
     mov  rdx,[b+4*56]
     mov  rcx,[b+4*58]
     mov  rbx,[b+4*60]
     mov  rax,[b+4*62]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*56],rdx
     mov  [a+4*58],rcx
     mov  [a+4*60],rbx
     mov  [a+4*62],rax
     mov  rdx,[b+4*64]
     mov  rcx,[b+4*66]
     mov  rbx,[b+4*68]
     mov  rax,[b+4*70]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*64],rdx
     mov  [a+4*66],rcx
     mov  [a+4*68],rbx
     mov  [a+4*70],rax
     mov  rdx,[b+4*72]
     mov  rcx,[b+4*74]
     mov  rbx,[b+4*76]
     mov  rax,[b+4*78]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*72],rdx
     mov  [a+4*74],rcx
     mov  [a+4*76],rbx
     mov  [a+4*78],rax
     mov  rdx,[b+4*80]
     mov  rcx,[b+4*82]
     mov  rbx,[b+4*84]
     mov  rax,[b+4*86]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*80],rdx
     mov  [a+4*82],rcx
     mov  [a+4*84],rbx
     mov  [a+4*86],rax
     mov  rdx,[b+4*88]
     mov  rcx,[b+4*90]
     mov  rbx,[b+4*92]
     mov  rax,[b+4*94]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*88],rdx
     mov  [a+4*90],rcx
     mov  [a+4*92],rbx
     mov  [a+4*94],rax
     mov  rdx,[b+4*96]
     mov  rcx,[b+4*98]
     mov  rbx,[b+4*100]
     mov  rax,[b+4*102]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*96],rdx
     mov  [a+4*98],rcx
     mov  [a+4*100],rbx
     mov  [a+4*102],rax
     mov  rdx,[b+4*104]
     mov  rcx,[b+4*106]
     mov  rbx,[b+4*108]
     mov  rax,[b+4*110]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*104],rdx
     mov  [a+4*106],rcx
     mov  [a+4*108],rbx
     mov  [a+4*110],rax
     mov  rdx,[b+4*112]
     mov  rcx,[b+4*114]
     mov  rbx,[b+4*116]
     mov  rax,[b+4*118]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*112],rdx
     mov  [a+4*114],rcx
     mov  [a+4*116],rbx
     mov  [a+4*118],rax
     mov  rdx,[b+4*120]
     mov  rcx,[b+4*122]
     mov  rbx,[b+4*124]
     mov  rax,[b+4*126]
     not  rdx
     not  rcx
     not  rbx
     not  rax
     adc  rdx,0
     adc  rcx,0
     adc  rbx,0
     adc  rax,0
     mov  [a+4*120],rdx
     mov  [a+4*122],rcx
     mov  [a+4*124],rbx
     mov  [a+4*126],rax
}

macro Add.SubAdd.128 a,b,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     xor  rsi,rsi
     add  r8,1
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*0]
     adc  r9,[e+4*2]
     adc  r10,[e+4*4]
     adc  r11,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  [b+4*0],r8
     mov  [b+4*2],r9
     mov  [b+4*4],r10
     mov  [b+4*6],r11
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*8]
     adc  r9,[e+4*10]
     adc  r10,[e+4*12]
     adc  r11,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  [b+4*8],r8
     mov  [b+4*10],r9
     mov  [b+4*12],r10
     mov  [b+4*14],r11
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*16]
     adc  r9,[e+4*18]
     adc  r10,[e+4*20]
     adc  r11,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  [b+4*16],r8
     mov  [b+4*18],r9
     mov  [b+4*20],r10
     mov  [b+4*22],r11
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*24]
     adc  r9,[e+4*26]
     adc  r10,[e+4*28]
     adc  r11,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  [b+4*24],r8
     mov  [b+4*26],r9
     mov  [b+4*28],r10
     mov  [b+4*30],r11
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*32]
     adc  r9,[e+4*34]
     adc  r10,[e+4*36]
     adc  r11,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  [b+4*32],r8
     mov  [b+4*34],r9
     mov  [b+4*36],r10
     mov  [b+4*38],r11
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*40]
     adc  r9,[e+4*42]
     adc  r10,[e+4*44]
     adc  r11,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  [b+4*40],r8
     mov  [b+4*42],r9
     mov  [b+4*44],r10
     mov  [b+4*46],r11
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*48]
     adc  r9,[e+4*50]
     adc  r10,[e+4*52]
     adc  r11,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  [b+4*48],r8
     mov  [b+4*50],r9
     mov  [b+4*52],r10
     mov  [b+4*54],r11
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*56]
     adc  r9,[e+4*58]
     adc  r10,[e+4*60]
     adc  r11,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  [b+4*56],r8
     mov  [b+4*58],r9
     mov  [b+4*60],r10
     mov  [b+4*62],r11
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*64]
     adc  r9,[e+4*66]
     adc  r10,[e+4*68]
     adc  r11,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  [b+4*64],r8
     mov  [b+4*66],r9
     mov  [b+4*68],r10
     mov  [b+4*70],r11
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*72]
     adc  r9,[e+4*74]
     adc  r10,[e+4*76]
     adc  r11,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  [b+4*72],r8
     mov  [b+4*74],r9
     mov  [b+4*76],r10
     mov  [b+4*78],r11
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*80]
     adc  r9,[e+4*82]
     adc  r10,[e+4*84]
     adc  r11,[e+4*86]
     adc  rdi,0
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  [b+4*80],r8
     mov  [b+4*82],r9
     mov  [b+4*84],r10
     mov  [b+4*86],r11
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*88]
     adc  r9,[e+4*90]
     adc  r10,[e+4*92]
     adc  r11,[e+4*94]
     adc  rdi,0
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  [b+4*88],r8
     mov  [b+4*90],r9
     mov  [b+4*92],r10
     mov  [b+4*94],r11
     mov  rax,[c+4*96]
     mov  rbx,[c+4*98]
     mov  rcx,[c+4*100]
     mov  rdx,[c+4*102]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*96]
     mov  r13,[d+4*98]
     mov  r14,[d+4*100]
     mov  r15,[d+4*102]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*96]
     adc  r9,[e+4*98]
     adc  r10,[e+4*100]
     adc  r11,[e+4*102]
     adc  rdi,0
     mov  [a+4*96],rax
     mov  [a+4*98],rbx
     mov  [a+4*100],rcx
     mov  [a+4*102],rdx
     mov  [b+4*96],r8
     mov  [b+4*98],r9
     mov  [b+4*100],r10
     mov  [b+4*102],r11
     mov  rax,[c+4*104]
     mov  rbx,[c+4*106]
     mov  rcx,[c+4*108]
     mov  rdx,[c+4*110]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*104]
     mov  r13,[d+4*106]
     mov  r14,[d+4*108]
     mov  r15,[d+4*110]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*104]
     adc  r9,[e+4*106]
     adc  r10,[e+4*108]
     adc  r11,[e+4*110]
     adc  rdi,0
     mov  [a+4*104],rax
     mov  [a+4*106],rbx
     mov  [a+4*108],rcx
     mov  [a+4*110],rdx
     mov  [b+4*104],r8
     mov  [b+4*106],r9
     mov  [b+4*108],r10
     mov  [b+4*110],r11
     mov  rax,[c+4*112]
     mov  rbx,[c+4*114]
     mov  rcx,[c+4*116]
     mov  rdx,[c+4*118]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  rdi,0
     adc  rdi,0
     mov  r12,[d+4*112]
     mov  r13,[d+4*114]
     mov  r14,[d+4*116]
     mov  r15,[d+4*118]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rsi,0
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     adc  rdi,0
     add  r8,[e+4*112]
     adc  r9,[e+4*114]
     adc  r10,[e+4*116]
     adc  r11,[e+4*118]
     adc  rdi,0
     mov  [a+4*112],rax
     mov  [a+4*114],rbx
     mov  [a+4*116],rcx
     mov  [a+4*118],rdx
     mov  [b+4*112],r8
     mov  [b+4*114],r9
     mov  [b+4*116],r10
     mov  [b+4*118],r11
     mov  rax,[c+4*120]
     mov  rbx,[c+4*122]
     mov  rcx,[c+4*124]
     mov  rdx,[c+4*126]
     mov  r8,rax
     mov  r9,rbx
     mov  r10,rcx
     mov  r11,rdx
     add  rax,rsi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     add  r8,rdi
     adc  r9,0
     adc  r10,0
     adc  r11,0
     mov  r12,[d+4*120]
     mov  r13,[d+4*122]
     mov  r14,[d+4*124]
     mov  r15,[d+4*126]
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     not  r12
     not  r13
     not  r14
     not  r15
     add  r8,r12
     adc  r9,r13
     adc  r10,r14
     adc  r11,r15
     add  r8,[e+4*120]
     adc  r9,[e+4*122]
     adc  r10,[e+4*124]
     adc  r11,[e+4*126]
     mov  [a+4*120],rax
     mov  [a+4*122],rbx
     mov  [a+4*124],rcx
     mov  [a+4*126],rdx
     mov  [b+4*120],r8
     mov  [b+4*122],r9
     mov  [b+4*124],r10
     mov  [b+4*126],r11
}

macro SubAdd.128 a,c,d,e {
     mov  rax,[c+4*0]
     mov  rbx,[c+4*2]
     mov  rcx,[c+4*4]
     mov  rdx,[c+4*6]
     add  rax,1
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*0]
     mov  r13,[d+4*2]
     mov  r14,[d+4*4]
     mov  r15,[d+4*6]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*0]
     adc  rbx,[e+4*2]
     adc  rcx,[e+4*4]
     adc  rdx,[e+4*6]
     adc  rdi,0
     mov  [a+4*0],rax
     mov  [a+4*2],rbx
     mov  [a+4*4],rcx
     mov  [a+4*6],rdx
     mov  rax,[c+4*8]
     mov  rbx,[c+4*10]
     mov  rcx,[c+4*12]
     mov  rdx,[c+4*14]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*8]
     mov  r13,[d+4*10]
     mov  r14,[d+4*12]
     mov  r15,[d+4*14]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*8]
     adc  rbx,[e+4*10]
     adc  rcx,[e+4*12]
     adc  rdx,[e+4*14]
     adc  rdi,0
     mov  [a+4*8],rax
     mov  [a+4*10],rbx
     mov  [a+4*12],rcx
     mov  [a+4*14],rdx
     mov  rax,[c+4*16]
     mov  rbx,[c+4*18]
     mov  rcx,[c+4*20]
     mov  rdx,[c+4*22]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*16]
     mov  r13,[d+4*18]
     mov  r14,[d+4*20]
     mov  r15,[d+4*22]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*16]
     adc  rbx,[e+4*18]
     adc  rcx,[e+4*20]
     adc  rdx,[e+4*22]
     adc  rdi,0
     mov  [a+4*16],rax
     mov  [a+4*18],rbx
     mov  [a+4*20],rcx
     mov  [a+4*22],rdx
     mov  rax,[c+4*24]
     mov  rbx,[c+4*26]
     mov  rcx,[c+4*28]
     mov  rdx,[c+4*30]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*24]
     mov  r13,[d+4*26]
     mov  r14,[d+4*28]
     mov  r15,[d+4*30]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*24]
     adc  rbx,[e+4*26]
     adc  rcx,[e+4*28]
     adc  rdx,[e+4*30]
     adc  rdi,0
     mov  [a+4*24],rax
     mov  [a+4*26],rbx
     mov  [a+4*28],rcx
     mov  [a+4*30],rdx
     mov  rax,[c+4*32]
     mov  rbx,[c+4*34]
     mov  rcx,[c+4*36]
     mov  rdx,[c+4*38]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*32]
     mov  r13,[d+4*34]
     mov  r14,[d+4*36]
     mov  r15,[d+4*38]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*32]
     adc  rbx,[e+4*34]
     adc  rcx,[e+4*36]
     adc  rdx,[e+4*38]
     adc  rdi,0
     mov  [a+4*32],rax
     mov  [a+4*34],rbx
     mov  [a+4*36],rcx
     mov  [a+4*38],rdx
     mov  rax,[c+4*40]
     mov  rbx,[c+4*42]
     mov  rcx,[c+4*44]
     mov  rdx,[c+4*46]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*40]
     mov  r13,[d+4*42]
     mov  r14,[d+4*44]
     mov  r15,[d+4*46]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*40]
     adc  rbx,[e+4*42]
     adc  rcx,[e+4*44]
     adc  rdx,[e+4*46]
     adc  rdi,0
     mov  [a+4*40],rax
     mov  [a+4*42],rbx
     mov  [a+4*44],rcx
     mov  [a+4*46],rdx
     mov  rax,[c+4*48]
     mov  rbx,[c+4*50]
     mov  rcx,[c+4*52]
     mov  rdx,[c+4*54]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*48]
     mov  r13,[d+4*50]
     mov  r14,[d+4*52]
     mov  r15,[d+4*54]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*48]
     adc  rbx,[e+4*50]
     adc  rcx,[e+4*52]
     adc  rdx,[e+4*54]
     adc  rdi,0
     mov  [a+4*48],rax
     mov  [a+4*50],rbx
     mov  [a+4*52],rcx
     mov  [a+4*54],rdx
     mov  rax,[c+4*56]
     mov  rbx,[c+4*58]
     mov  rcx,[c+4*60]
     mov  rdx,[c+4*62]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*56]
     mov  r13,[d+4*58]
     mov  r14,[d+4*60]
     mov  r15,[d+4*62]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*56]
     adc  rbx,[e+4*58]
     adc  rcx,[e+4*60]
     adc  rdx,[e+4*62]
     adc  rdi,0
     mov  [a+4*56],rax
     mov  [a+4*58],rbx
     mov  [a+4*60],rcx
     mov  [a+4*62],rdx
     mov  rax,[c+4*64]
     mov  rbx,[c+4*66]
     mov  rcx,[c+4*68]
     mov  rdx,[c+4*70]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*64]
     mov  r13,[d+4*66]
     mov  r14,[d+4*68]
     mov  r15,[d+4*70]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*64]
     adc  rbx,[e+4*66]
     adc  rcx,[e+4*68]
     adc  rdx,[e+4*70]
     adc  rdi,0
     mov  [a+4*64],rax
     mov  [a+4*66],rbx
     mov  [a+4*68],rcx
     mov  [a+4*70],rdx
     mov  rax,[c+4*72]
     mov  rbx,[c+4*74]
     mov  rcx,[c+4*76]
     mov  rdx,[c+4*78]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*72]
     mov  r13,[d+4*74]
     mov  r14,[d+4*76]
     mov  r15,[d+4*78]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*72]
     adc  rbx,[e+4*74]
     adc  rcx,[e+4*76]
     adc  rdx,[e+4*78]
     adc  rdi,0
     mov  [a+4*72],rax
     mov  [a+4*74],rbx
     mov  [a+4*76],rcx
     mov  [a+4*78],rdx
     mov  rax,[c+4*80]
     mov  rbx,[c+4*82]
     mov  rcx,[c+4*84]
     mov  rdx,[c+4*86]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*80]
     mov  r13,[d+4*82]
     mov  r14,[d+4*84]
     mov  r15,[d+4*86]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*80]
     adc  rbx,[e+4*82]
     adc  rcx,[e+4*84]
     adc  rdx,[e+4*86]
     adc  rdi,0
     mov  [a+4*80],rax
     mov  [a+4*82],rbx
     mov  [a+4*84],rcx
     mov  [a+4*86],rdx
     mov  rax,[c+4*88]
     mov  rbx,[c+4*90]
     mov  rcx,[c+4*92]
     mov  rdx,[c+4*94]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*88]
     mov  r13,[d+4*90]
     mov  r14,[d+4*92]
     mov  r15,[d+4*94]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*88]
     adc  rbx,[e+4*90]
     adc  rcx,[e+4*92]
     adc  rdx,[e+4*94]
     adc  rdi,0
     mov  [a+4*88],rax
     mov  [a+4*90],rbx
     mov  [a+4*92],rcx
     mov  [a+4*94],rdx
     mov  rax,[c+4*96]
     mov  rbx,[c+4*98]
     mov  rcx,[c+4*100]
     mov  rdx,[c+4*102]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*96]
     mov  r13,[d+4*98]
     mov  r14,[d+4*100]
     mov  r15,[d+4*102]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*96]
     adc  rbx,[e+4*98]
     adc  rcx,[e+4*100]
     adc  rdx,[e+4*102]
     adc  rdi,0
     mov  [a+4*96],rax
     mov  [a+4*98],rbx
     mov  [a+4*100],rcx
     mov  [a+4*102],rdx
     mov  rax,[c+4*104]
     mov  rbx,[c+4*106]
     mov  rcx,[c+4*108]
     mov  rdx,[c+4*110]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*104]
     mov  r13,[d+4*106]
     mov  r14,[d+4*108]
     mov  r15,[d+4*110]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*104]
     adc  rbx,[e+4*106]
     adc  rcx,[e+4*108]
     adc  rdx,[e+4*110]
     adc  rdi,0
     mov  [a+4*104],rax
     mov  [a+4*106],rbx
     mov  [a+4*108],rcx
     mov  [a+4*110],rdx
     mov  rax,[c+4*112]
     mov  rbx,[c+4*114]
     mov  rcx,[c+4*116]
     mov  rdx,[c+4*118]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     sbb  rdi,rdi
     neg  rdi
     mov  r12,[d+4*112]
     mov  r13,[d+4*114]
     mov  r14,[d+4*116]
     mov  r15,[d+4*118]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     adc  rdi,0
     add  rax,[e+4*112]
     adc  rbx,[e+4*114]
     adc  rcx,[e+4*116]
     adc  rdx,[e+4*118]
     adc  rdi,0
     mov  [a+4*112],rax
     mov  [a+4*114],rbx
     mov  [a+4*116],rcx
     mov  [a+4*118],rdx
     mov  rax,[c+4*120]
     mov  rbx,[c+4*122]
     mov  rcx,[c+4*124]
     mov  rdx,[c+4*126]
     add  rax,rdi
     adc  rbx,0
     adc  rcx,0
     adc  rdx,0
     mov  r12,[d+4*120]
     mov  r13,[d+4*122]
     mov  r14,[d+4*124]
     mov  r15,[d+4*126]
     not  r12
     not  r13
     not  r14
     not  r15
     add  rax,r12
     adc  rbx,r13
     adc  rcx,r14
     adc  rdx,r15
     add  rax,[e+4*120]
     adc  rbx,[e+4*122]
     adc  rcx,[e+4*124]
     adc  rdx,[e+4*126]
     mov  [a+4*120],rax
     mov  [a+4*122],rbx
     mov  [a+4*124],rcx
     mov  [a+4*126],rdx
}
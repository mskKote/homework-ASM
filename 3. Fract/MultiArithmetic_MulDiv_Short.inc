macro Mul.4.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  [a+8*1],r8
}

macro Div.4.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.6.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  [a+8*2],r9
}

macro Div.6.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.8.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  [a+8*3],r8
}

macro Div.8.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.12.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  [a+8*5],r8
}

macro Div.12.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.16.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  [a+8*7],r8
}

macro Div.16.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.20.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  [a+8*9],r8
}

macro Div.20.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.24.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  [a+8*11],r8
}

macro Div.24.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.28.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  [a+8*13],r8
}

macro Div.28.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.32.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  [a+8*15],r8
}

macro Div.32.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.36.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  [a+8*17],r8
}

macro Div.36.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.40.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  [a+8*19],r8
}

macro Div.40.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.48.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  [a+8*23],r8
}

macro Div.48.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.56.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*23],r8
     adc  r9,0
     mov  rax,[b+4*48]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*24],r9
     adc  r8,0
     mov  rax,[b+4*50]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*25],r8
     adc  r9,0
     mov  rax,[b+4*52]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*26],r9
     adc  r8,0
     mov  rax,[b+4*54]
     mul  rcx
     add  r8,rax
     mov  [a+8*27],r8
}

macro Div.56.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*55]
     div  ecx
     mov  dword[a+4*55],eax
     mov  eax,dword[b+4*54]
     div  ecx
     mov  dword[a+4*54],eax
     mov  eax,dword[b+4*53]
     div  ecx
     mov  dword[a+4*53],eax
     mov  eax,dword[b+4*52]
     div  ecx
     mov  dword[a+4*52],eax
     mov  eax,dword[b+4*51]
     div  ecx
     mov  dword[a+4*51],eax
     mov  eax,dword[b+4*50]
     div  ecx
     mov  dword[a+4*50],eax
     mov  eax,dword[b+4*49]
     div  ecx
     mov  dword[a+4*49],eax
     mov  eax,dword[b+4*48]
     div  ecx
     mov  dword[a+4*48],eax
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.64.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*23],r8
     adc  r9,0
     mov  rax,[b+4*48]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*24],r9
     adc  r8,0
     mov  rax,[b+4*50]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*25],r8
     adc  r9,0
     mov  rax,[b+4*52]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*26],r9
     adc  r8,0
     mov  rax,[b+4*54]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*27],r8
     adc  r9,0
     mov  rax,[b+4*56]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*28],r9
     adc  r8,0
     mov  rax,[b+4*58]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*29],r8
     adc  r9,0
     mov  rax,[b+4*60]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*30],r9
     adc  r8,0
     mov  rax,[b+4*62]
     mul  rcx
     add  r8,rax
     mov  [a+8*31],r8
}

macro Div.64.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*63]
     div  ecx
     mov  dword[a+4*63],eax
     mov  eax,dword[b+4*62]
     div  ecx
     mov  dword[a+4*62],eax
     mov  eax,dword[b+4*61]
     div  ecx
     mov  dword[a+4*61],eax
     mov  eax,dword[b+4*60]
     div  ecx
     mov  dword[a+4*60],eax
     mov  eax,dword[b+4*59]
     div  ecx
     mov  dword[a+4*59],eax
     mov  eax,dword[b+4*58]
     div  ecx
     mov  dword[a+4*58],eax
     mov  eax,dword[b+4*57]
     div  ecx
     mov  dword[a+4*57],eax
     mov  eax,dword[b+4*56]
     div  ecx
     mov  dword[a+4*56],eax
     mov  eax,dword[b+4*55]
     div  ecx
     mov  dword[a+4*55],eax
     mov  eax,dword[b+4*54]
     div  ecx
     mov  dword[a+4*54],eax
     mov  eax,dword[b+4*53]
     div  ecx
     mov  dword[a+4*53],eax
     mov  eax,dword[b+4*52]
     div  ecx
     mov  dword[a+4*52],eax
     mov  eax,dword[b+4*51]
     div  ecx
     mov  dword[a+4*51],eax
     mov  eax,dword[b+4*50]
     div  ecx
     mov  dword[a+4*50],eax
     mov  eax,dword[b+4*49]
     div  ecx
     mov  dword[a+4*49],eax
     mov  eax,dword[b+4*48]
     div  ecx
     mov  dword[a+4*48],eax
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.72.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*23],r8
     adc  r9,0
     mov  rax,[b+4*48]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*24],r9
     adc  r8,0
     mov  rax,[b+4*50]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*25],r8
     adc  r9,0
     mov  rax,[b+4*52]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*26],r9
     adc  r8,0
     mov  rax,[b+4*54]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*27],r8
     adc  r9,0
     mov  rax,[b+4*56]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*28],r9
     adc  r8,0
     mov  rax,[b+4*58]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*29],r8
     adc  r9,0
     mov  rax,[b+4*60]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*30],r9
     adc  r8,0
     mov  rax,[b+4*62]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*31],r8
     adc  r9,0
     mov  rax,[b+4*64]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*32],r9
     adc  r8,0
     mov  rax,[b+4*66]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*33],r8
     adc  r9,0
     mov  rax,[b+4*68]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*34],r9
     adc  r8,0
     mov  rax,[b+4*70]
     mul  rcx
     add  r8,rax
     mov  [a+8*35],r8
}

macro Div.72.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*71]
     div  ecx
     mov  dword[a+4*71],eax
     mov  eax,dword[b+4*70]
     div  ecx
     mov  dword[a+4*70],eax
     mov  eax,dword[b+4*69]
     div  ecx
     mov  dword[a+4*69],eax
     mov  eax,dword[b+4*68]
     div  ecx
     mov  dword[a+4*68],eax
     mov  eax,dword[b+4*67]
     div  ecx
     mov  dword[a+4*67],eax
     mov  eax,dword[b+4*66]
     div  ecx
     mov  dword[a+4*66],eax
     mov  eax,dword[b+4*65]
     div  ecx
     mov  dword[a+4*65],eax
     mov  eax,dword[b+4*64]
     div  ecx
     mov  dword[a+4*64],eax
     mov  eax,dword[b+4*63]
     div  ecx
     mov  dword[a+4*63],eax
     mov  eax,dword[b+4*62]
     div  ecx
     mov  dword[a+4*62],eax
     mov  eax,dword[b+4*61]
     div  ecx
     mov  dword[a+4*61],eax
     mov  eax,dword[b+4*60]
     div  ecx
     mov  dword[a+4*60],eax
     mov  eax,dword[b+4*59]
     div  ecx
     mov  dword[a+4*59],eax
     mov  eax,dword[b+4*58]
     div  ecx
     mov  dword[a+4*58],eax
     mov  eax,dword[b+4*57]
     div  ecx
     mov  dword[a+4*57],eax
     mov  eax,dword[b+4*56]
     div  ecx
     mov  dword[a+4*56],eax
     mov  eax,dword[b+4*55]
     div  ecx
     mov  dword[a+4*55],eax
     mov  eax,dword[b+4*54]
     div  ecx
     mov  dword[a+4*54],eax
     mov  eax,dword[b+4*53]
     div  ecx
     mov  dword[a+4*53],eax
     mov  eax,dword[b+4*52]
     div  ecx
     mov  dword[a+4*52],eax
     mov  eax,dword[b+4*51]
     div  ecx
     mov  dword[a+4*51],eax
     mov  eax,dword[b+4*50]
     div  ecx
     mov  dword[a+4*50],eax
     mov  eax,dword[b+4*49]
     div  ecx
     mov  dword[a+4*49],eax
     mov  eax,dword[b+4*48]
     div  ecx
     mov  dword[a+4*48],eax
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.84.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*23],r8
     adc  r9,0
     mov  rax,[b+4*48]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*24],r9
     adc  r8,0
     mov  rax,[b+4*50]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*25],r8
     adc  r9,0
     mov  rax,[b+4*52]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*26],r9
     adc  r8,0
     mov  rax,[b+4*54]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*27],r8
     adc  r9,0
     mov  rax,[b+4*56]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*28],r9
     adc  r8,0
     mov  rax,[b+4*58]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*29],r8
     adc  r9,0
     mov  rax,[b+4*60]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*30],r9
     adc  r8,0
     mov  rax,[b+4*62]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*31],r8
     adc  r9,0
     mov  rax,[b+4*64]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*32],r9
     adc  r8,0
     mov  rax,[b+4*66]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*33],r8
     adc  r9,0
     mov  rax,[b+4*68]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*34],r9
     adc  r8,0
     mov  rax,[b+4*70]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*35],r8
     adc  r9,0
     mov  rax,[b+4*72]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*36],r9
     adc  r8,0
     mov  rax,[b+4*74]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*37],r8
     adc  r9,0
     mov  rax,[b+4*76]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*38],r9
     adc  r8,0
     mov  rax,[b+4*78]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*39],r8
     adc  r9,0
     mov  rax,[b+4*80]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*40],r9
     adc  r8,0
     mov  rax,[b+4*82]
     mul  rcx
     add  r8,rax
     mov  [a+8*41],r8
}

macro Div.84.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*83]
     div  ecx
     mov  dword[a+4*83],eax
     mov  eax,dword[b+4*82]
     div  ecx
     mov  dword[a+4*82],eax
     mov  eax,dword[b+4*81]
     div  ecx
     mov  dword[a+4*81],eax
     mov  eax,dword[b+4*80]
     div  ecx
     mov  dword[a+4*80],eax
     mov  eax,dword[b+4*79]
     div  ecx
     mov  dword[a+4*79],eax
     mov  eax,dword[b+4*78]
     div  ecx
     mov  dword[a+4*78],eax
     mov  eax,dword[b+4*77]
     div  ecx
     mov  dword[a+4*77],eax
     mov  eax,dword[b+4*76]
     div  ecx
     mov  dword[a+4*76],eax
     mov  eax,dword[b+4*75]
     div  ecx
     mov  dword[a+4*75],eax
     mov  eax,dword[b+4*74]
     div  ecx
     mov  dword[a+4*74],eax
     mov  eax,dword[b+4*73]
     div  ecx
     mov  dword[a+4*73],eax
     mov  eax,dword[b+4*72]
     div  ecx
     mov  dword[a+4*72],eax
     mov  eax,dword[b+4*71]
     div  ecx
     mov  dword[a+4*71],eax
     mov  eax,dword[b+4*70]
     div  ecx
     mov  dword[a+4*70],eax
     mov  eax,dword[b+4*69]
     div  ecx
     mov  dword[a+4*69],eax
     mov  eax,dword[b+4*68]
     div  ecx
     mov  dword[a+4*68],eax
     mov  eax,dword[b+4*67]
     div  ecx
     mov  dword[a+4*67],eax
     mov  eax,dword[b+4*66]
     div  ecx
     mov  dword[a+4*66],eax
     mov  eax,dword[b+4*65]
     div  ecx
     mov  dword[a+4*65],eax
     mov  eax,dword[b+4*64]
     div  ecx
     mov  dword[a+4*64],eax
     mov  eax,dword[b+4*63]
     div  ecx
     mov  dword[a+4*63],eax
     mov  eax,dword[b+4*62]
     div  ecx
     mov  dword[a+4*62],eax
     mov  eax,dword[b+4*61]
     div  ecx
     mov  dword[a+4*61],eax
     mov  eax,dword[b+4*60]
     div  ecx
     mov  dword[a+4*60],eax
     mov  eax,dword[b+4*59]
     div  ecx
     mov  dword[a+4*59],eax
     mov  eax,dword[b+4*58]
     div  ecx
     mov  dword[a+4*58],eax
     mov  eax,dword[b+4*57]
     div  ecx
     mov  dword[a+4*57],eax
     mov  eax,dword[b+4*56]
     div  ecx
     mov  dword[a+4*56],eax
     mov  eax,dword[b+4*55]
     div  ecx
     mov  dword[a+4*55],eax
     mov  eax,dword[b+4*54]
     div  ecx
     mov  dword[a+4*54],eax
     mov  eax,dword[b+4*53]
     div  ecx
     mov  dword[a+4*53],eax
     mov  eax,dword[b+4*52]
     div  ecx
     mov  dword[a+4*52],eax
     mov  eax,dword[b+4*51]
     div  ecx
     mov  dword[a+4*51],eax
     mov  eax,dword[b+4*50]
     div  ecx
     mov  dword[a+4*50],eax
     mov  eax,dword[b+4*49]
     div  ecx
     mov  dword[a+4*49],eax
     mov  eax,dword[b+4*48]
     div  ecx
     mov  dword[a+4*48],eax
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.96.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*23],r8
     adc  r9,0
     mov  rax,[b+4*48]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*24],r9
     adc  r8,0
     mov  rax,[b+4*50]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*25],r8
     adc  r9,0
     mov  rax,[b+4*52]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*26],r9
     adc  r8,0
     mov  rax,[b+4*54]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*27],r8
     adc  r9,0
     mov  rax,[b+4*56]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*28],r9
     adc  r8,0
     mov  rax,[b+4*58]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*29],r8
     adc  r9,0
     mov  rax,[b+4*60]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*30],r9
     adc  r8,0
     mov  rax,[b+4*62]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*31],r8
     adc  r9,0
     mov  rax,[b+4*64]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*32],r9
     adc  r8,0
     mov  rax,[b+4*66]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*33],r8
     adc  r9,0
     mov  rax,[b+4*68]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*34],r9
     adc  r8,0
     mov  rax,[b+4*70]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*35],r8
     adc  r9,0
     mov  rax,[b+4*72]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*36],r9
     adc  r8,0
     mov  rax,[b+4*74]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*37],r8
     adc  r9,0
     mov  rax,[b+4*76]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*38],r9
     adc  r8,0
     mov  rax,[b+4*78]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*39],r8
     adc  r9,0
     mov  rax,[b+4*80]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*40],r9
     adc  r8,0
     mov  rax,[b+4*82]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*41],r8
     adc  r9,0
     mov  rax,[b+4*84]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*42],r9
     adc  r8,0
     mov  rax,[b+4*86]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*43],r8
     adc  r9,0
     mov  rax,[b+4*88]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*44],r9
     adc  r8,0
     mov  rax,[b+4*90]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*45],r8
     adc  r9,0
     mov  rax,[b+4*92]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*46],r9
     adc  r8,0
     mov  rax,[b+4*94]
     mul  rcx
     add  r8,rax
     mov  [a+8*47],r8
}

macro Div.96.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*95]
     div  ecx
     mov  dword[a+4*95],eax
     mov  eax,dword[b+4*94]
     div  ecx
     mov  dword[a+4*94],eax
     mov  eax,dword[b+4*93]
     div  ecx
     mov  dword[a+4*93],eax
     mov  eax,dword[b+4*92]
     div  ecx
     mov  dword[a+4*92],eax
     mov  eax,dword[b+4*91]
     div  ecx
     mov  dword[a+4*91],eax
     mov  eax,dword[b+4*90]
     div  ecx
     mov  dword[a+4*90],eax
     mov  eax,dword[b+4*89]
     div  ecx
     mov  dword[a+4*89],eax
     mov  eax,dword[b+4*88]
     div  ecx
     mov  dword[a+4*88],eax
     mov  eax,dword[b+4*87]
     div  ecx
     mov  dword[a+4*87],eax
     mov  eax,dword[b+4*86]
     div  ecx
     mov  dword[a+4*86],eax
     mov  eax,dword[b+4*85]
     div  ecx
     mov  dword[a+4*85],eax
     mov  eax,dword[b+4*84]
     div  ecx
     mov  dword[a+4*84],eax
     mov  eax,dword[b+4*83]
     div  ecx
     mov  dword[a+4*83],eax
     mov  eax,dword[b+4*82]
     div  ecx
     mov  dword[a+4*82],eax
     mov  eax,dword[b+4*81]
     div  ecx
     mov  dword[a+4*81],eax
     mov  eax,dword[b+4*80]
     div  ecx
     mov  dword[a+4*80],eax
     mov  eax,dword[b+4*79]
     div  ecx
     mov  dword[a+4*79],eax
     mov  eax,dword[b+4*78]
     div  ecx
     mov  dword[a+4*78],eax
     mov  eax,dword[b+4*77]
     div  ecx
     mov  dword[a+4*77],eax
     mov  eax,dword[b+4*76]
     div  ecx
     mov  dword[a+4*76],eax
     mov  eax,dword[b+4*75]
     div  ecx
     mov  dword[a+4*75],eax
     mov  eax,dword[b+4*74]
     div  ecx
     mov  dword[a+4*74],eax
     mov  eax,dword[b+4*73]
     div  ecx
     mov  dword[a+4*73],eax
     mov  eax,dword[b+4*72]
     div  ecx
     mov  dword[a+4*72],eax
     mov  eax,dword[b+4*71]
     div  ecx
     mov  dword[a+4*71],eax
     mov  eax,dword[b+4*70]
     div  ecx
     mov  dword[a+4*70],eax
     mov  eax,dword[b+4*69]
     div  ecx
     mov  dword[a+4*69],eax
     mov  eax,dword[b+4*68]
     div  ecx
     mov  dword[a+4*68],eax
     mov  eax,dword[b+4*67]
     div  ecx
     mov  dword[a+4*67],eax
     mov  eax,dword[b+4*66]
     div  ecx
     mov  dword[a+4*66],eax
     mov  eax,dword[b+4*65]
     div  ecx
     mov  dword[a+4*65],eax
     mov  eax,dword[b+4*64]
     div  ecx
     mov  dword[a+4*64],eax
     mov  eax,dword[b+4*63]
     div  ecx
     mov  dword[a+4*63],eax
     mov  eax,dword[b+4*62]
     div  ecx
     mov  dword[a+4*62],eax
     mov  eax,dword[b+4*61]
     div  ecx
     mov  dword[a+4*61],eax
     mov  eax,dword[b+4*60]
     div  ecx
     mov  dword[a+4*60],eax
     mov  eax,dword[b+4*59]
     div  ecx
     mov  dword[a+4*59],eax
     mov  eax,dword[b+4*58]
     div  ecx
     mov  dword[a+4*58],eax
     mov  eax,dword[b+4*57]
     div  ecx
     mov  dword[a+4*57],eax
     mov  eax,dword[b+4*56]
     div  ecx
     mov  dword[a+4*56],eax
     mov  eax,dword[b+4*55]
     div  ecx
     mov  dword[a+4*55],eax
     mov  eax,dword[b+4*54]
     div  ecx
     mov  dword[a+4*54],eax
     mov  eax,dword[b+4*53]
     div  ecx
     mov  dword[a+4*53],eax
     mov  eax,dword[b+4*52]
     div  ecx
     mov  dword[a+4*52],eax
     mov  eax,dword[b+4*51]
     div  ecx
     mov  dword[a+4*51],eax
     mov  eax,dword[b+4*50]
     div  ecx
     mov  dword[a+4*50],eax
     mov  eax,dword[b+4*49]
     div  ecx
     mov  dword[a+4*49],eax
     mov  eax,dword[b+4*48]
     div  ecx
     mov  dword[a+4*48],eax
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.112.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*23],r8
     adc  r9,0
     mov  rax,[b+4*48]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*24],r9
     adc  r8,0
     mov  rax,[b+4*50]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*25],r8
     adc  r9,0
     mov  rax,[b+4*52]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*26],r9
     adc  r8,0
     mov  rax,[b+4*54]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*27],r8
     adc  r9,0
     mov  rax,[b+4*56]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*28],r9
     adc  r8,0
     mov  rax,[b+4*58]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*29],r8
     adc  r9,0
     mov  rax,[b+4*60]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*30],r9
     adc  r8,0
     mov  rax,[b+4*62]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*31],r8
     adc  r9,0
     mov  rax,[b+4*64]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*32],r9
     adc  r8,0
     mov  rax,[b+4*66]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*33],r8
     adc  r9,0
     mov  rax,[b+4*68]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*34],r9
     adc  r8,0
     mov  rax,[b+4*70]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*35],r8
     adc  r9,0
     mov  rax,[b+4*72]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*36],r9
     adc  r8,0
     mov  rax,[b+4*74]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*37],r8
     adc  r9,0
     mov  rax,[b+4*76]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*38],r9
     adc  r8,0
     mov  rax,[b+4*78]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*39],r8
     adc  r9,0
     mov  rax,[b+4*80]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*40],r9
     adc  r8,0
     mov  rax,[b+4*82]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*41],r8
     adc  r9,0
     mov  rax,[b+4*84]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*42],r9
     adc  r8,0
     mov  rax,[b+4*86]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*43],r8
     adc  r9,0
     mov  rax,[b+4*88]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*44],r9
     adc  r8,0
     mov  rax,[b+4*90]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*45],r8
     adc  r9,0
     mov  rax,[b+4*92]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*46],r9
     adc  r8,0
     mov  rax,[b+4*94]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*47],r8
     adc  r9,0
     mov  rax,[b+4*96]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*48],r9
     adc  r8,0
     mov  rax,[b+4*98]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*49],r8
     adc  r9,0
     mov  rax,[b+4*100]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*50],r9
     adc  r8,0
     mov  rax,[b+4*102]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*51],r8
     adc  r9,0
     mov  rax,[b+4*104]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*52],r9
     adc  r8,0
     mov  rax,[b+4*106]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*53],r8
     adc  r9,0
     mov  rax,[b+4*108]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*54],r9
     adc  r8,0
     mov  rax,[b+4*110]
     mul  rcx
     add  r8,rax
     mov  [a+8*55],r8
}

macro Div.112.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*111]
     div  ecx
     mov  dword[a+4*111],eax
     mov  eax,dword[b+4*110]
     div  ecx
     mov  dword[a+4*110],eax
     mov  eax,dword[b+4*109]
     div  ecx
     mov  dword[a+4*109],eax
     mov  eax,dword[b+4*108]
     div  ecx
     mov  dword[a+4*108],eax
     mov  eax,dword[b+4*107]
     div  ecx
     mov  dword[a+4*107],eax
     mov  eax,dword[b+4*106]
     div  ecx
     mov  dword[a+4*106],eax
     mov  eax,dword[b+4*105]
     div  ecx
     mov  dword[a+4*105],eax
     mov  eax,dword[b+4*104]
     div  ecx
     mov  dword[a+4*104],eax
     mov  eax,dword[b+4*103]
     div  ecx
     mov  dword[a+4*103],eax
     mov  eax,dword[b+4*102]
     div  ecx
     mov  dword[a+4*102],eax
     mov  eax,dword[b+4*101]
     div  ecx
     mov  dword[a+4*101],eax
     mov  eax,dword[b+4*100]
     div  ecx
     mov  dword[a+4*100],eax
     mov  eax,dword[b+4*99]
     div  ecx
     mov  dword[a+4*99],eax
     mov  eax,dword[b+4*98]
     div  ecx
     mov  dword[a+4*98],eax
     mov  eax,dword[b+4*97]
     div  ecx
     mov  dword[a+4*97],eax
     mov  eax,dword[b+4*96]
     div  ecx
     mov  dword[a+4*96],eax
     mov  eax,dword[b+4*95]
     div  ecx
     mov  dword[a+4*95],eax
     mov  eax,dword[b+4*94]
     div  ecx
     mov  dword[a+4*94],eax
     mov  eax,dword[b+4*93]
     div  ecx
     mov  dword[a+4*93],eax
     mov  eax,dword[b+4*92]
     div  ecx
     mov  dword[a+4*92],eax
     mov  eax,dword[b+4*91]
     div  ecx
     mov  dword[a+4*91],eax
     mov  eax,dword[b+4*90]
     div  ecx
     mov  dword[a+4*90],eax
     mov  eax,dword[b+4*89]
     div  ecx
     mov  dword[a+4*89],eax
     mov  eax,dword[b+4*88]
     div  ecx
     mov  dword[a+4*88],eax
     mov  eax,dword[b+4*87]
     div  ecx
     mov  dword[a+4*87],eax
     mov  eax,dword[b+4*86]
     div  ecx
     mov  dword[a+4*86],eax
     mov  eax,dword[b+4*85]
     div  ecx
     mov  dword[a+4*85],eax
     mov  eax,dword[b+4*84]
     div  ecx
     mov  dword[a+4*84],eax
     mov  eax,dword[b+4*83]
     div  ecx
     mov  dword[a+4*83],eax
     mov  eax,dword[b+4*82]
     div  ecx
     mov  dword[a+4*82],eax
     mov  eax,dword[b+4*81]
     div  ecx
     mov  dword[a+4*81],eax
     mov  eax,dword[b+4*80]
     div  ecx
     mov  dword[a+4*80],eax
     mov  eax,dword[b+4*79]
     div  ecx
     mov  dword[a+4*79],eax
     mov  eax,dword[b+4*78]
     div  ecx
     mov  dword[a+4*78],eax
     mov  eax,dword[b+4*77]
     div  ecx
     mov  dword[a+4*77],eax
     mov  eax,dword[b+4*76]
     div  ecx
     mov  dword[a+4*76],eax
     mov  eax,dword[b+4*75]
     div  ecx
     mov  dword[a+4*75],eax
     mov  eax,dword[b+4*74]
     div  ecx
     mov  dword[a+4*74],eax
     mov  eax,dword[b+4*73]
     div  ecx
     mov  dword[a+4*73],eax
     mov  eax,dword[b+4*72]
     div  ecx
     mov  dword[a+4*72],eax
     mov  eax,dword[b+4*71]
     div  ecx
     mov  dword[a+4*71],eax
     mov  eax,dword[b+4*70]
     div  ecx
     mov  dword[a+4*70],eax
     mov  eax,dword[b+4*69]
     div  ecx
     mov  dword[a+4*69],eax
     mov  eax,dword[b+4*68]
     div  ecx
     mov  dword[a+4*68],eax
     mov  eax,dword[b+4*67]
     div  ecx
     mov  dword[a+4*67],eax
     mov  eax,dword[b+4*66]
     div  ecx
     mov  dword[a+4*66],eax
     mov  eax,dword[b+4*65]
     div  ecx
     mov  dword[a+4*65],eax
     mov  eax,dword[b+4*64]
     div  ecx
     mov  dword[a+4*64],eax
     mov  eax,dword[b+4*63]
     div  ecx
     mov  dword[a+4*63],eax
     mov  eax,dword[b+4*62]
     div  ecx
     mov  dword[a+4*62],eax
     mov  eax,dword[b+4*61]
     div  ecx
     mov  dword[a+4*61],eax
     mov  eax,dword[b+4*60]
     div  ecx
     mov  dword[a+4*60],eax
     mov  eax,dword[b+4*59]
     div  ecx
     mov  dword[a+4*59],eax
     mov  eax,dword[b+4*58]
     div  ecx
     mov  dword[a+4*58],eax
     mov  eax,dword[b+4*57]
     div  ecx
     mov  dword[a+4*57],eax
     mov  eax,dword[b+4*56]
     div  ecx
     mov  dword[a+4*56],eax
     mov  eax,dword[b+4*55]
     div  ecx
     mov  dword[a+4*55],eax
     mov  eax,dword[b+4*54]
     div  ecx
     mov  dword[a+4*54],eax
     mov  eax,dword[b+4*53]
     div  ecx
     mov  dword[a+4*53],eax
     mov  eax,dword[b+4*52]
     div  ecx
     mov  dword[a+4*52],eax
     mov  eax,dword[b+4*51]
     div  ecx
     mov  dword[a+4*51],eax
     mov  eax,dword[b+4*50]
     div  ecx
     mov  dword[a+4*50],eax
     mov  eax,dword[b+4*49]
     div  ecx
     mov  dword[a+4*49],eax
     mov  eax,dword[b+4*48]
     div  ecx
     mov  dword[a+4*48],eax
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}

macro Mul.128.1 a,b,c {
     mov  ecx,c
     mov  rax,[b+4*0]
     mul  rcx
     mov  [a+4*0],rax
     mov  r8,rdx
     mov  rax,[b+4*2]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*1],r8
     adc  r9,0
     mov  rax,[b+4*4]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*2],r9
     adc  r8,0
     mov  rax,[b+4*6]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*3],r8
     adc  r9,0
     mov  rax,[b+4*8]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*4],r9
     adc  r8,0
     mov  rax,[b+4*10]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*5],r8
     adc  r9,0
     mov  rax,[b+4*12]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*6],r9
     adc  r8,0
     mov  rax,[b+4*14]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*7],r8
     adc  r9,0
     mov  rax,[b+4*16]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*8],r9
     adc  r8,0
     mov  rax,[b+4*18]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*9],r8
     adc  r9,0
     mov  rax,[b+4*20]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*10],r9
     adc  r8,0
     mov  rax,[b+4*22]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*11],r8
     adc  r9,0
     mov  rax,[b+4*24]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*12],r9
     adc  r8,0
     mov  rax,[b+4*26]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*13],r8
     adc  r9,0
     mov  rax,[b+4*28]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*14],r9
     adc  r8,0
     mov  rax,[b+4*30]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*15],r8
     adc  r9,0
     mov  rax,[b+4*32]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*16],r9
     adc  r8,0
     mov  rax,[b+4*34]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*17],r8
     adc  r9,0
     mov  rax,[b+4*36]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*18],r9
     adc  r8,0
     mov  rax,[b+4*38]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*19],r8
     adc  r9,0
     mov  rax,[b+4*40]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*20],r9
     adc  r8,0
     mov  rax,[b+4*42]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*21],r8
     adc  r9,0
     mov  rax,[b+4*44]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*22],r9
     adc  r8,0
     mov  rax,[b+4*46]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*23],r8
     adc  r9,0
     mov  rax,[b+4*48]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*24],r9
     adc  r8,0
     mov  rax,[b+4*50]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*25],r8
     adc  r9,0
     mov  rax,[b+4*52]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*26],r9
     adc  r8,0
     mov  rax,[b+4*54]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*27],r8
     adc  r9,0
     mov  rax,[b+4*56]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*28],r9
     adc  r8,0
     mov  rax,[b+4*58]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*29],r8
     adc  r9,0
     mov  rax,[b+4*60]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*30],r9
     adc  r8,0
     mov  rax,[b+4*62]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*31],r8
     adc  r9,0
     mov  rax,[b+4*64]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*32],r9
     adc  r8,0
     mov  rax,[b+4*66]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*33],r8
     adc  r9,0
     mov  rax,[b+4*68]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*34],r9
     adc  r8,0
     mov  rax,[b+4*70]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*35],r8
     adc  r9,0
     mov  rax,[b+4*72]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*36],r9
     adc  r8,0
     mov  rax,[b+4*74]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*37],r8
     adc  r9,0
     mov  rax,[b+4*76]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*38],r9
     adc  r8,0
     mov  rax,[b+4*78]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*39],r8
     adc  r9,0
     mov  rax,[b+4*80]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*40],r9
     adc  r8,0
     mov  rax,[b+4*82]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*41],r8
     adc  r9,0
     mov  rax,[b+4*84]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*42],r9
     adc  r8,0
     mov  rax,[b+4*86]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*43],r8
     adc  r9,0
     mov  rax,[b+4*88]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*44],r9
     adc  r8,0
     mov  rax,[b+4*90]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*45],r8
     adc  r9,0
     mov  rax,[b+4*92]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*46],r9
     adc  r8,0
     mov  rax,[b+4*94]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*47],r8
     adc  r9,0
     mov  rax,[b+4*96]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*48],r9
     adc  r8,0
     mov  rax,[b+4*98]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*49],r8
     adc  r9,0
     mov  rax,[b+4*100]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*50],r9
     adc  r8,0
     mov  rax,[b+4*102]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*51],r8
     adc  r9,0
     mov  rax,[b+4*104]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*52],r9
     adc  r8,0
     mov  rax,[b+4*106]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*53],r8
     adc  r9,0
     mov  rax,[b+4*108]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*54],r9
     adc  r8,0
     mov  rax,[b+4*110]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*55],r8
     adc  r9,0
     mov  rax,[b+4*112]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*56],r9
     adc  r8,0
     mov  rax,[b+4*114]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*57],r8
     adc  r9,0
     mov  rax,[b+4*116]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*58],r9
     adc  r8,0
     mov  rax,[b+4*118]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*59],r8
     adc  r9,0
     mov  rax,[b+4*120]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*60],r9
     adc  r8,0
     mov  rax,[b+4*122]
     mul  rcx
     add  r8,rax
     mov  r9,rdx
     mov  [a+8*61],r8
     adc  r9,0
     mov  rax,[b+4*124]
     mul  rcx
     add  r9,rax
     mov  r8,rdx
     mov  [a+8*62],r9
     adc  r8,0
     mov  rax,[b+4*126]
     mul  rcx
     add  r8,rax
     mov  [a+8*63],r8
}

macro Div.128.1 a,b,c {
     mov  ecx,c
    test  ecx,ecx
      jz  @f
     xor  edx,edx
     mov  eax,dword[b+4*127]
     div  ecx
     mov  dword[a+4*127],eax
     mov  eax,dword[b+4*126]
     div  ecx
     mov  dword[a+4*126],eax
     mov  eax,dword[b+4*125]
     div  ecx
     mov  dword[a+4*125],eax
     mov  eax,dword[b+4*124]
     div  ecx
     mov  dword[a+4*124],eax
     mov  eax,dword[b+4*123]
     div  ecx
     mov  dword[a+4*123],eax
     mov  eax,dword[b+4*122]
     div  ecx
     mov  dword[a+4*122],eax
     mov  eax,dword[b+4*121]
     div  ecx
     mov  dword[a+4*121],eax
     mov  eax,dword[b+4*120]
     div  ecx
     mov  dword[a+4*120],eax
     mov  eax,dword[b+4*119]
     div  ecx
     mov  dword[a+4*119],eax
     mov  eax,dword[b+4*118]
     div  ecx
     mov  dword[a+4*118],eax
     mov  eax,dword[b+4*117]
     div  ecx
     mov  dword[a+4*117],eax
     mov  eax,dword[b+4*116]
     div  ecx
     mov  dword[a+4*116],eax
     mov  eax,dword[b+4*115]
     div  ecx
     mov  dword[a+4*115],eax
     mov  eax,dword[b+4*114]
     div  ecx
     mov  dword[a+4*114],eax
     mov  eax,dword[b+4*113]
     div  ecx
     mov  dword[a+4*113],eax
     mov  eax,dword[b+4*112]
     div  ecx
     mov  dword[a+4*112],eax
     mov  eax,dword[b+4*111]
     div  ecx
     mov  dword[a+4*111],eax
     mov  eax,dword[b+4*110]
     div  ecx
     mov  dword[a+4*110],eax
     mov  eax,dword[b+4*109]
     div  ecx
     mov  dword[a+4*109],eax
     mov  eax,dword[b+4*108]
     div  ecx
     mov  dword[a+4*108],eax
     mov  eax,dword[b+4*107]
     div  ecx
     mov  dword[a+4*107],eax
     mov  eax,dword[b+4*106]
     div  ecx
     mov  dword[a+4*106],eax
     mov  eax,dword[b+4*105]
     div  ecx
     mov  dword[a+4*105],eax
     mov  eax,dword[b+4*104]
     div  ecx
     mov  dword[a+4*104],eax
     mov  eax,dword[b+4*103]
     div  ecx
     mov  dword[a+4*103],eax
     mov  eax,dword[b+4*102]
     div  ecx
     mov  dword[a+4*102],eax
     mov  eax,dword[b+4*101]
     div  ecx
     mov  dword[a+4*101],eax
     mov  eax,dword[b+4*100]
     div  ecx
     mov  dword[a+4*100],eax
     mov  eax,dword[b+4*99]
     div  ecx
     mov  dword[a+4*99],eax
     mov  eax,dword[b+4*98]
     div  ecx
     mov  dword[a+4*98],eax
     mov  eax,dword[b+4*97]
     div  ecx
     mov  dword[a+4*97],eax
     mov  eax,dword[b+4*96]
     div  ecx
     mov  dword[a+4*96],eax
     mov  eax,dword[b+4*95]
     div  ecx
     mov  dword[a+4*95],eax
     mov  eax,dword[b+4*94]
     div  ecx
     mov  dword[a+4*94],eax
     mov  eax,dword[b+4*93]
     div  ecx
     mov  dword[a+4*93],eax
     mov  eax,dword[b+4*92]
     div  ecx
     mov  dword[a+4*92],eax
     mov  eax,dword[b+4*91]
     div  ecx
     mov  dword[a+4*91],eax
     mov  eax,dword[b+4*90]
     div  ecx
     mov  dword[a+4*90],eax
     mov  eax,dword[b+4*89]
     div  ecx
     mov  dword[a+4*89],eax
     mov  eax,dword[b+4*88]
     div  ecx
     mov  dword[a+4*88],eax
     mov  eax,dword[b+4*87]
     div  ecx
     mov  dword[a+4*87],eax
     mov  eax,dword[b+4*86]
     div  ecx
     mov  dword[a+4*86],eax
     mov  eax,dword[b+4*85]
     div  ecx
     mov  dword[a+4*85],eax
     mov  eax,dword[b+4*84]
     div  ecx
     mov  dword[a+4*84],eax
     mov  eax,dword[b+4*83]
     div  ecx
     mov  dword[a+4*83],eax
     mov  eax,dword[b+4*82]
     div  ecx
     mov  dword[a+4*82],eax
     mov  eax,dword[b+4*81]
     div  ecx
     mov  dword[a+4*81],eax
     mov  eax,dword[b+4*80]
     div  ecx
     mov  dword[a+4*80],eax
     mov  eax,dword[b+4*79]
     div  ecx
     mov  dword[a+4*79],eax
     mov  eax,dword[b+4*78]
     div  ecx
     mov  dword[a+4*78],eax
     mov  eax,dword[b+4*77]
     div  ecx
     mov  dword[a+4*77],eax
     mov  eax,dword[b+4*76]
     div  ecx
     mov  dword[a+4*76],eax
     mov  eax,dword[b+4*75]
     div  ecx
     mov  dword[a+4*75],eax
     mov  eax,dword[b+4*74]
     div  ecx
     mov  dword[a+4*74],eax
     mov  eax,dword[b+4*73]
     div  ecx
     mov  dword[a+4*73],eax
     mov  eax,dword[b+4*72]
     div  ecx
     mov  dword[a+4*72],eax
     mov  eax,dword[b+4*71]
     div  ecx
     mov  dword[a+4*71],eax
     mov  eax,dword[b+4*70]
     div  ecx
     mov  dword[a+4*70],eax
     mov  eax,dword[b+4*69]
     div  ecx
     mov  dword[a+4*69],eax
     mov  eax,dword[b+4*68]
     div  ecx
     mov  dword[a+4*68],eax
     mov  eax,dword[b+4*67]
     div  ecx
     mov  dword[a+4*67],eax
     mov  eax,dword[b+4*66]
     div  ecx
     mov  dword[a+4*66],eax
     mov  eax,dword[b+4*65]
     div  ecx
     mov  dword[a+4*65],eax
     mov  eax,dword[b+4*64]
     div  ecx
     mov  dword[a+4*64],eax
     mov  eax,dword[b+4*63]
     div  ecx
     mov  dword[a+4*63],eax
     mov  eax,dword[b+4*62]
     div  ecx
     mov  dword[a+4*62],eax
     mov  eax,dword[b+4*61]
     div  ecx
     mov  dword[a+4*61],eax
     mov  eax,dword[b+4*60]
     div  ecx
     mov  dword[a+4*60],eax
     mov  eax,dword[b+4*59]
     div  ecx
     mov  dword[a+4*59],eax
     mov  eax,dword[b+4*58]
     div  ecx
     mov  dword[a+4*58],eax
     mov  eax,dword[b+4*57]
     div  ecx
     mov  dword[a+4*57],eax
     mov  eax,dword[b+4*56]
     div  ecx
     mov  dword[a+4*56],eax
     mov  eax,dword[b+4*55]
     div  ecx
     mov  dword[a+4*55],eax
     mov  eax,dword[b+4*54]
     div  ecx
     mov  dword[a+4*54],eax
     mov  eax,dword[b+4*53]
     div  ecx
     mov  dword[a+4*53],eax
     mov  eax,dword[b+4*52]
     div  ecx
     mov  dword[a+4*52],eax
     mov  eax,dword[b+4*51]
     div  ecx
     mov  dword[a+4*51],eax
     mov  eax,dword[b+4*50]
     div  ecx
     mov  dword[a+4*50],eax
     mov  eax,dword[b+4*49]
     div  ecx
     mov  dword[a+4*49],eax
     mov  eax,dword[b+4*48]
     div  ecx
     mov  dword[a+4*48],eax
     mov  eax,dword[b+4*47]
     div  ecx
     mov  dword[a+4*47],eax
     mov  eax,dword[b+4*46]
     div  ecx
     mov  dword[a+4*46],eax
     mov  eax,dword[b+4*45]
     div  ecx
     mov  dword[a+4*45],eax
     mov  eax,dword[b+4*44]
     div  ecx
     mov  dword[a+4*44],eax
     mov  eax,dword[b+4*43]
     div  ecx
     mov  dword[a+4*43],eax
     mov  eax,dword[b+4*42]
     div  ecx
     mov  dword[a+4*42],eax
     mov  eax,dword[b+4*41]
     div  ecx
     mov  dword[a+4*41],eax
     mov  eax,dword[b+4*40]
     div  ecx
     mov  dword[a+4*40],eax
     mov  eax,dword[b+4*39]
     div  ecx
     mov  dword[a+4*39],eax
     mov  eax,dword[b+4*38]
     div  ecx
     mov  dword[a+4*38],eax
     mov  eax,dword[b+4*37]
     div  ecx
     mov  dword[a+4*37],eax
     mov  eax,dword[b+4*36]
     div  ecx
     mov  dword[a+4*36],eax
     mov  eax,dword[b+4*35]
     div  ecx
     mov  dword[a+4*35],eax
     mov  eax,dword[b+4*34]
     div  ecx
     mov  dword[a+4*34],eax
     mov  eax,dword[b+4*33]
     div  ecx
     mov  dword[a+4*33],eax
     mov  eax,dword[b+4*32]
     div  ecx
     mov  dword[a+4*32],eax
     mov  eax,dword[b+4*31]
     div  ecx
     mov  dword[a+4*31],eax
     mov  eax,dword[b+4*30]
     div  ecx
     mov  dword[a+4*30],eax
     mov  eax,dword[b+4*29]
     div  ecx
     mov  dword[a+4*29],eax
     mov  eax,dword[b+4*28]
     div  ecx
     mov  dword[a+4*28],eax
     mov  eax,dword[b+4*27]
     div  ecx
     mov  dword[a+4*27],eax
     mov  eax,dword[b+4*26]
     div  ecx
     mov  dword[a+4*26],eax
     mov  eax,dword[b+4*25]
     div  ecx
     mov  dword[a+4*25],eax
     mov  eax,dword[b+4*24]
     div  ecx
     mov  dword[a+4*24],eax
     mov  eax,dword[b+4*23]
     div  ecx
     mov  dword[a+4*23],eax
     mov  eax,dword[b+4*22]
     div  ecx
     mov  dword[a+4*22],eax
     mov  eax,dword[b+4*21]
     div  ecx
     mov  dword[a+4*21],eax
     mov  eax,dword[b+4*20]
     div  ecx
     mov  dword[a+4*20],eax
     mov  eax,dword[b+4*19]
     div  ecx
     mov  dword[a+4*19],eax
     mov  eax,dword[b+4*18]
     div  ecx
     mov  dword[a+4*18],eax
     mov  eax,dword[b+4*17]
     div  ecx
     mov  dword[a+4*17],eax
     mov  eax,dword[b+4*16]
     div  ecx
     mov  dword[a+4*16],eax
     mov  eax,dword[b+4*15]
     div  ecx
     mov  dword[a+4*15],eax
     mov  eax,dword[b+4*14]
     div  ecx
     mov  dword[a+4*14],eax
     mov  eax,dword[b+4*13]
     div  ecx
     mov  dword[a+4*13],eax
     mov  eax,dword[b+4*12]
     div  ecx
     mov  dword[a+4*12],eax
     mov  eax,dword[b+4*11]
     div  ecx
     mov  dword[a+4*11],eax
     mov  eax,dword[b+4*10]
     div  ecx
     mov  dword[a+4*10],eax
     mov  eax,dword[b+4*9]
     div  ecx
     mov  dword[a+4*9],eax
     mov  eax,dword[b+4*8]
     div  ecx
     mov  dword[a+4*8],eax
     mov  eax,dword[b+4*7]
     div  ecx
     mov  dword[a+4*7],eax
     mov  eax,dword[b+4*6]
     div  ecx
     mov  dword[a+4*6],eax
     mov  eax,dword[b+4*5]
     div  ecx
     mov  dword[a+4*5],eax
     mov  eax,dword[b+4*4]
     div  ecx
     mov  dword[a+4*4],eax
     mov  eax,dword[b+4*3]
     div  ecx
     mov  dword[a+4*3],eax
     mov  eax,dword[b+4*2]
     div  ecx
     mov  dword[a+4*2],eax
     mov  eax,dword[b+4*1]
     div  ecx
     mov  dword[a+4*1],eax
     mov  eax,dword[b+4*0]
     div  ecx
     mov  dword[a+4*0],eax
  @@:
}